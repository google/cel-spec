// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/checked/v1/checked.proto

/*
Package v1 is a generated protocol buffer package.

It is generated from these files:
	proto/checked/v1/checked.proto

It has these top-level messages:
	CheckedExpr
	Type
	Decl
	Reference
*/
package checked

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_api_expr_v1 "github.com/google/cel-spec/proto/v1"
import google_protobuf3 "github.com/golang/protobuf/ptypes/any"
import google_protobuf4 "github.com/golang/protobuf/ptypes/empty"
import google_protobuf1 "github.com/golang/protobuf/ptypes/struct"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Type_PrimitiveType int32

const (
	Type_PRIMITIVE_TYPE_UNSPECIFIED Type_PrimitiveType = 0
	Type_BOOL                       Type_PrimitiveType = 1
	Type_INT64                      Type_PrimitiveType = 2
	Type_UINT64                     Type_PrimitiveType = 3
	Type_DOUBLE                     Type_PrimitiveType = 4
	Type_STRING                     Type_PrimitiveType = 5
	Type_BYTES                      Type_PrimitiveType = 6
)

var Type_PrimitiveType_name = map[int32]string{
	0: "PRIMITIVE_TYPE_UNSPECIFIED",
	1: "BOOL",
	2: "INT64",
	3: "UINT64",
	4: "DOUBLE",
	5: "STRING",
	6: "BYTES",
}
var Type_PrimitiveType_value = map[string]int32{
	"PRIMITIVE_TYPE_UNSPECIFIED": 0,
	"BOOL":   1,
	"INT64":  2,
	"UINT64": 3,
	"DOUBLE": 4,
	"STRING": 5,
	"BYTES":  6,
}

func (x Type_PrimitiveType) String() string {
	return proto.EnumName(Type_PrimitiveType_name, int32(x))
}
func (Type_PrimitiveType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 0} }

type Type_WellKnownType int32

const (
	Type_WELL_KNOWN_TYPE_UNSPECIFIED Type_WellKnownType = 0
	Type_ANY                         Type_WellKnownType = 1
	Type_TIMESTAMP                   Type_WellKnownType = 2
	Type_DURATION                    Type_WellKnownType = 3
)

var Type_WellKnownType_name = map[int32]string{
	0: "WELL_KNOWN_TYPE_UNSPECIFIED",
	1: "ANY",
	2: "TIMESTAMP",
	3: "DURATION",
}
var Type_WellKnownType_value = map[string]int32{
	"WELL_KNOWN_TYPE_UNSPECIFIED": 0,
	"ANY":       1,
	"TIMESTAMP": 2,
	"DURATION":  3,
}

func (x Type_WellKnownType) String() string {
	return proto.EnumName(Type_WellKnownType_name, int32(x))
}
func (Type_WellKnownType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 1} }

type CheckedExpr struct {
	ReferenceMap map[int64]*Reference           `protobuf:"bytes,2,rep,name=reference_map,json=referenceMap" json:"reference_map,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	TypeMap      map[int64]*Type                `protobuf:"bytes,3,rep,name=type_map,json=typeMap" json:"type_map,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	SourceInfo   *google_api_expr_v1.SourceInfo `protobuf:"bytes,5,opt,name=source_info,json=sourceInfo" json:"source_info,omitempty"`
	Expr         *google_api_expr_v1.Expr       `protobuf:"bytes,4,opt,name=expr" json:"expr,omitempty"`
}

func (m *CheckedExpr) Reset()                    { *m = CheckedExpr{} }
func (m *CheckedExpr) String() string            { return proto.CompactTextString(m) }
func (*CheckedExpr) ProtoMessage()               {}
func (*CheckedExpr) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *CheckedExpr) GetReferenceMap() map[int64]*Reference {
	if m != nil {
		return m.ReferenceMap
	}
	return nil
}

func (m *CheckedExpr) GetTypeMap() map[int64]*Type {
	if m != nil {
		return m.TypeMap
	}
	return nil
}

func (m *CheckedExpr) GetSourceInfo() *google_api_expr_v1.SourceInfo {
	if m != nil {
		return m.SourceInfo
	}
	return nil
}

func (m *CheckedExpr) GetExpr() *google_api_expr_v1.Expr {
	if m != nil {
		return m.Expr
	}
	return nil
}

type Type struct {
	// Types that are valid to be assigned to TypeKind:
	//	*Type_Dyn
	//	*Type_Null
	//	*Type_Primitive
	//	*Type_Wrapper
	//	*Type_WellKnown
	//	*Type_ListType_
	//	*Type_MapType_
	//	*Type_Function
	//	*Type_MessageType
	//	*Type_TypeParam
	//	*Type_Type
	//	*Type_Error
	//	*Type_Extension
	TypeKind isType_TypeKind `protobuf_oneof:"type_kind"`
}

func (m *Type) Reset()                    { *m = Type{} }
func (m *Type) String() string            { return proto.CompactTextString(m) }
func (*Type) ProtoMessage()               {}
func (*Type) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type isType_TypeKind interface{ isType_TypeKind() }

type Type_Dyn struct {
	Dyn *google_protobuf4.Empty `protobuf:"bytes,1,opt,name=dyn,oneof"`
}
type Type_Null struct {
	Null google_protobuf1.NullValue `protobuf:"varint,2,opt,name=null,enum=google.protobuf.NullValue,oneof"`
}
type Type_Primitive struct {
	Primitive Type_PrimitiveType `protobuf:"varint,3,opt,name=primitive,enum=google.api.expr.checked.v1.Type_PrimitiveType,oneof"`
}
type Type_Wrapper struct {
	Wrapper Type_PrimitiveType `protobuf:"varint,4,opt,name=wrapper,enum=google.api.expr.checked.v1.Type_PrimitiveType,oneof"`
}
type Type_WellKnown struct {
	WellKnown Type_WellKnownType `protobuf:"varint,5,opt,name=well_known,json=wellKnown,enum=google.api.expr.checked.v1.Type_WellKnownType,oneof"`
}
type Type_ListType_ struct {
	ListType *Type_ListType `protobuf:"bytes,6,opt,name=list_type,json=listType,oneof"`
}
type Type_MapType_ struct {
	MapType *Type_MapType `protobuf:"bytes,7,opt,name=map_type,json=mapType,oneof"`
}
type Type_Function struct {
	Function *Type_FunctionType `protobuf:"bytes,8,opt,name=function,oneof"`
}
type Type_MessageType struct {
	MessageType string `protobuf:"bytes,9,opt,name=message_type,json=messageType,oneof"`
}
type Type_TypeParam struct {
	TypeParam string `protobuf:"bytes,10,opt,name=type_param,json=typeParam,oneof"`
}
type Type_Type struct {
	Type *Type `protobuf:"bytes,11,opt,name=type,oneof"`
}
type Type_Error struct {
	Error *google_protobuf4.Empty `protobuf:"bytes,12,opt,name=error,oneof"`
}
type Type_Extension struct {
	Extension *google_protobuf3.Any `protobuf:"bytes,13,opt,name=extension,oneof"`
}

func (*Type_Dyn) isType_TypeKind()         {}
func (*Type_Null) isType_TypeKind()        {}
func (*Type_Primitive) isType_TypeKind()   {}
func (*Type_Wrapper) isType_TypeKind()     {}
func (*Type_WellKnown) isType_TypeKind()   {}
func (*Type_ListType_) isType_TypeKind()   {}
func (*Type_MapType_) isType_TypeKind()    {}
func (*Type_Function) isType_TypeKind()    {}
func (*Type_MessageType) isType_TypeKind() {}
func (*Type_TypeParam) isType_TypeKind()   {}
func (*Type_Type) isType_TypeKind()        {}
func (*Type_Error) isType_TypeKind()       {}
func (*Type_Extension) isType_TypeKind()   {}

func (m *Type) GetTypeKind() isType_TypeKind {
	if m != nil {
		return m.TypeKind
	}
	return nil
}

func (m *Type) GetDyn() *google_protobuf4.Empty {
	if x, ok := m.GetTypeKind().(*Type_Dyn); ok {
		return x.Dyn
	}
	return nil
}

func (m *Type) GetNull() google_protobuf1.NullValue {
	if x, ok := m.GetTypeKind().(*Type_Null); ok {
		return x.Null
	}
	return google_protobuf1.NullValue_NULL_VALUE
}

func (m *Type) GetPrimitive() Type_PrimitiveType {
	if x, ok := m.GetTypeKind().(*Type_Primitive); ok {
		return x.Primitive
	}
	return Type_PRIMITIVE_TYPE_UNSPECIFIED
}

func (m *Type) GetWrapper() Type_PrimitiveType {
	if x, ok := m.GetTypeKind().(*Type_Wrapper); ok {
		return x.Wrapper
	}
	return Type_PRIMITIVE_TYPE_UNSPECIFIED
}

func (m *Type) GetWellKnown() Type_WellKnownType {
	if x, ok := m.GetTypeKind().(*Type_WellKnown); ok {
		return x.WellKnown
	}
	return Type_WELL_KNOWN_TYPE_UNSPECIFIED
}

func (m *Type) GetListType() *Type_ListType {
	if x, ok := m.GetTypeKind().(*Type_ListType_); ok {
		return x.ListType
	}
	return nil
}

func (m *Type) GetMapType() *Type_MapType {
	if x, ok := m.GetTypeKind().(*Type_MapType_); ok {
		return x.MapType
	}
	return nil
}

func (m *Type) GetFunction() *Type_FunctionType {
	if x, ok := m.GetTypeKind().(*Type_Function); ok {
		return x.Function
	}
	return nil
}

func (m *Type) GetMessageType() string {
	if x, ok := m.GetTypeKind().(*Type_MessageType); ok {
		return x.MessageType
	}
	return ""
}

func (m *Type) GetTypeParam() string {
	if x, ok := m.GetTypeKind().(*Type_TypeParam); ok {
		return x.TypeParam
	}
	return ""
}

func (m *Type) GetType() *Type {
	if x, ok := m.GetTypeKind().(*Type_Type); ok {
		return x.Type
	}
	return nil
}

func (m *Type) GetError() *google_protobuf4.Empty {
	if x, ok := m.GetTypeKind().(*Type_Error); ok {
		return x.Error
	}
	return nil
}

func (m *Type) GetExtension() *google_protobuf3.Any {
	if x, ok := m.GetTypeKind().(*Type_Extension); ok {
		return x.Extension
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Type) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Type_OneofMarshaler, _Type_OneofUnmarshaler, _Type_OneofSizer, []interface{}{
		(*Type_Dyn)(nil),
		(*Type_Null)(nil),
		(*Type_Primitive)(nil),
		(*Type_Wrapper)(nil),
		(*Type_WellKnown)(nil),
		(*Type_ListType_)(nil),
		(*Type_MapType_)(nil),
		(*Type_Function)(nil),
		(*Type_MessageType)(nil),
		(*Type_TypeParam)(nil),
		(*Type_Type)(nil),
		(*Type_Error)(nil),
		(*Type_Extension)(nil),
	}
}

func _Type_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Type)
	// type_kind
	switch x := m.TypeKind.(type) {
	case *Type_Dyn:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Dyn); err != nil {
			return err
		}
	case *Type_Null:
		b.EncodeVarint(2<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.Null))
	case *Type_Primitive:
		b.EncodeVarint(3<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.Primitive))
	case *Type_Wrapper:
		b.EncodeVarint(4<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.Wrapper))
	case *Type_WellKnown:
		b.EncodeVarint(5<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.WellKnown))
	case *Type_ListType_:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ListType); err != nil {
			return err
		}
	case *Type_MapType_:
		b.EncodeVarint(7<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.MapType); err != nil {
			return err
		}
	case *Type_Function:
		b.EncodeVarint(8<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Function); err != nil {
			return err
		}
	case *Type_MessageType:
		b.EncodeVarint(9<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.MessageType)
	case *Type_TypeParam:
		b.EncodeVarint(10<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.TypeParam)
	case *Type_Type:
		b.EncodeVarint(11<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Type); err != nil {
			return err
		}
	case *Type_Error:
		b.EncodeVarint(12<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Error); err != nil {
			return err
		}
	case *Type_Extension:
		b.EncodeVarint(13<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Extension); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Type.TypeKind has unexpected type %T", x)
	}
	return nil
}

func _Type_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Type)
	switch tag {
	case 1: // type_kind.dyn
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(google_protobuf4.Empty)
		err := b.DecodeMessage(msg)
		m.TypeKind = &Type_Dyn{msg}
		return true, err
	case 2: // type_kind.null
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.TypeKind = &Type_Null{google_protobuf1.NullValue(x)}
		return true, err
	case 3: // type_kind.primitive
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.TypeKind = &Type_Primitive{Type_PrimitiveType(x)}
		return true, err
	case 4: // type_kind.wrapper
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.TypeKind = &Type_Wrapper{Type_PrimitiveType(x)}
		return true, err
	case 5: // type_kind.well_known
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.TypeKind = &Type_WellKnown{Type_WellKnownType(x)}
		return true, err
	case 6: // type_kind.list_type
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Type_ListType)
		err := b.DecodeMessage(msg)
		m.TypeKind = &Type_ListType_{msg}
		return true, err
	case 7: // type_kind.map_type
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Type_MapType)
		err := b.DecodeMessage(msg)
		m.TypeKind = &Type_MapType_{msg}
		return true, err
	case 8: // type_kind.function
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Type_FunctionType)
		err := b.DecodeMessage(msg)
		m.TypeKind = &Type_Function{msg}
		return true, err
	case 9: // type_kind.message_type
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.TypeKind = &Type_MessageType{x}
		return true, err
	case 10: // type_kind.type_param
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.TypeKind = &Type_TypeParam{x}
		return true, err
	case 11: // type_kind.type
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Type)
		err := b.DecodeMessage(msg)
		m.TypeKind = &Type_Type{msg}
		return true, err
	case 12: // type_kind.error
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(google_protobuf4.Empty)
		err := b.DecodeMessage(msg)
		m.TypeKind = &Type_Error{msg}
		return true, err
	case 13: // type_kind.extension
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(google_protobuf3.Any)
		err := b.DecodeMessage(msg)
		m.TypeKind = &Type_Extension{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Type_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Type)
	// type_kind
	switch x := m.TypeKind.(type) {
	case *Type_Dyn:
		s := proto.Size(x.Dyn)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Type_Null:
		n += proto.SizeVarint(2<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.Null))
	case *Type_Primitive:
		n += proto.SizeVarint(3<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.Primitive))
	case *Type_Wrapper:
		n += proto.SizeVarint(4<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.Wrapper))
	case *Type_WellKnown:
		n += proto.SizeVarint(5<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.WellKnown))
	case *Type_ListType_:
		s := proto.Size(x.ListType)
		n += proto.SizeVarint(6<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Type_MapType_:
		s := proto.Size(x.MapType)
		n += proto.SizeVarint(7<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Type_Function:
		s := proto.Size(x.Function)
		n += proto.SizeVarint(8<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Type_MessageType:
		n += proto.SizeVarint(9<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.MessageType)))
		n += len(x.MessageType)
	case *Type_TypeParam:
		n += proto.SizeVarint(10<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.TypeParam)))
		n += len(x.TypeParam)
	case *Type_Type:
		s := proto.Size(x.Type)
		n += proto.SizeVarint(11<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Type_Error:
		s := proto.Size(x.Error)
		n += proto.SizeVarint(12<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Type_Extension:
		s := proto.Size(x.Extension)
		n += proto.SizeVarint(13<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type Type_ListType struct {
	ElemType *Type `protobuf:"bytes,1,opt,name=elem_type,json=elemType" json:"elem_type,omitempty"`
}

func (m *Type_ListType) Reset()                    { *m = Type_ListType{} }
func (m *Type_ListType) String() string            { return proto.CompactTextString(m) }
func (*Type_ListType) ProtoMessage()               {}
func (*Type_ListType) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 0} }

func (m *Type_ListType) GetElemType() *Type {
	if m != nil {
		return m.ElemType
	}
	return nil
}

type Type_MapType struct {
	KeyType   *Type `protobuf:"bytes,1,opt,name=key_type,json=keyType" json:"key_type,omitempty"`
	ValueType *Type `protobuf:"bytes,2,opt,name=value_type,json=valueType" json:"value_type,omitempty"`
}

func (m *Type_MapType) Reset()                    { *m = Type_MapType{} }
func (m *Type_MapType) String() string            { return proto.CompactTextString(m) }
func (*Type_MapType) ProtoMessage()               {}
func (*Type_MapType) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 1} }

func (m *Type_MapType) GetKeyType() *Type {
	if m != nil {
		return m.KeyType
	}
	return nil
}

func (m *Type_MapType) GetValueType() *Type {
	if m != nil {
		return m.ValueType
	}
	return nil
}

type Type_FunctionType struct {
	ResultType *Type   `protobuf:"bytes,1,opt,name=result_type,json=resultType" json:"result_type,omitempty"`
	ArgTypes   []*Type `protobuf:"bytes,2,rep,name=arg_types,json=argTypes" json:"arg_types,omitempty"`
}

func (m *Type_FunctionType) Reset()                    { *m = Type_FunctionType{} }
func (m *Type_FunctionType) String() string            { return proto.CompactTextString(m) }
func (*Type_FunctionType) ProtoMessage()               {}
func (*Type_FunctionType) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 2} }

func (m *Type_FunctionType) GetResultType() *Type {
	if m != nil {
		return m.ResultType
	}
	return nil
}

func (m *Type_FunctionType) GetArgTypes() []*Type {
	if m != nil {
		return m.ArgTypes
	}
	return nil
}

type Decl struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// Types that are valid to be assigned to DeclKind:
	//	*Decl_Ident
	//	*Decl_Function
	DeclKind isDecl_DeclKind `protobuf_oneof:"decl_kind"`
}

func (m *Decl) Reset()                    { *m = Decl{} }
func (m *Decl) String() string            { return proto.CompactTextString(m) }
func (*Decl) ProtoMessage()               {}
func (*Decl) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type isDecl_DeclKind interface{ isDecl_DeclKind() }

type Decl_Ident struct {
	Ident *Decl_IdentDecl `protobuf:"bytes,2,opt,name=ident,oneof"`
}
type Decl_Function struct {
	Function *Decl_FunctionDecl `protobuf:"bytes,3,opt,name=function,oneof"`
}

func (*Decl_Ident) isDecl_DeclKind()    {}
func (*Decl_Function) isDecl_DeclKind() {}

func (m *Decl) GetDeclKind() isDecl_DeclKind {
	if m != nil {
		return m.DeclKind
	}
	return nil
}

func (m *Decl) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Decl) GetIdent() *Decl_IdentDecl {
	if x, ok := m.GetDeclKind().(*Decl_Ident); ok {
		return x.Ident
	}
	return nil
}

func (m *Decl) GetFunction() *Decl_FunctionDecl {
	if x, ok := m.GetDeclKind().(*Decl_Function); ok {
		return x.Function
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Decl) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Decl_OneofMarshaler, _Decl_OneofUnmarshaler, _Decl_OneofSizer, []interface{}{
		(*Decl_Ident)(nil),
		(*Decl_Function)(nil),
	}
}

func _Decl_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Decl)
	// decl_kind
	switch x := m.DeclKind.(type) {
	case *Decl_Ident:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Ident); err != nil {
			return err
		}
	case *Decl_Function:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Function); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Decl.DeclKind has unexpected type %T", x)
	}
	return nil
}

func _Decl_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Decl)
	switch tag {
	case 2: // decl_kind.ident
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Decl_IdentDecl)
		err := b.DecodeMessage(msg)
		m.DeclKind = &Decl_Ident{msg}
		return true, err
	case 3: // decl_kind.function
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Decl_FunctionDecl)
		err := b.DecodeMessage(msg)
		m.DeclKind = &Decl_Function{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Decl_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Decl)
	// decl_kind
	switch x := m.DeclKind.(type) {
	case *Decl_Ident:
		s := proto.Size(x.Ident)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Decl_Function:
		s := proto.Size(x.Function)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type Decl_IdentDecl struct {
	Type  *Type                        `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
	Value *google_api_expr_v1.Constant `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	Doc   string                       `protobuf:"bytes,3,opt,name=doc" json:"doc,omitempty"`
}

func (m *Decl_IdentDecl) Reset()                    { *m = Decl_IdentDecl{} }
func (m *Decl_IdentDecl) String() string            { return proto.CompactTextString(m) }
func (*Decl_IdentDecl) ProtoMessage()               {}
func (*Decl_IdentDecl) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2, 0} }

func (m *Decl_IdentDecl) GetType() *Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *Decl_IdentDecl) GetValue() *google_api_expr_v1.Constant {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Decl_IdentDecl) GetDoc() string {
	if m != nil {
		return m.Doc
	}
	return ""
}

type Decl_FunctionDecl struct {
	Overloads []*Decl_FunctionDecl_Overload `protobuf:"bytes,1,rep,name=overloads" json:"overloads,omitempty"`
}

func (m *Decl_FunctionDecl) Reset()                    { *m = Decl_FunctionDecl{} }
func (m *Decl_FunctionDecl) String() string            { return proto.CompactTextString(m) }
func (*Decl_FunctionDecl) ProtoMessage()               {}
func (*Decl_FunctionDecl) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2, 1} }

func (m *Decl_FunctionDecl) GetOverloads() []*Decl_FunctionDecl_Overload {
	if m != nil {
		return m.Overloads
	}
	return nil
}

type Decl_FunctionDecl_Overload struct {
	OverloadId         string   `protobuf:"bytes,1,opt,name=overload_id,json=overloadId" json:"overload_id,omitempty"`
	Params             []*Type  `protobuf:"bytes,2,rep,name=params" json:"params,omitempty"`
	TypeParams         []string `protobuf:"bytes,3,rep,name=type_params,json=typeParams" json:"type_params,omitempty"`
	ResultType         *Type    `protobuf:"bytes,4,opt,name=result_type,json=resultType" json:"result_type,omitempty"`
	IsInstanceFunction bool     `protobuf:"varint,5,opt,name=is_instance_function,json=isInstanceFunction" json:"is_instance_function,omitempty"`
	Doc                string   `protobuf:"bytes,6,opt,name=doc" json:"doc,omitempty"`
}

func (m *Decl_FunctionDecl_Overload) Reset()         { *m = Decl_FunctionDecl_Overload{} }
func (m *Decl_FunctionDecl_Overload) String() string { return proto.CompactTextString(m) }
func (*Decl_FunctionDecl_Overload) ProtoMessage()    {}
func (*Decl_FunctionDecl_Overload) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{2, 1, 0}
}

func (m *Decl_FunctionDecl_Overload) GetOverloadId() string {
	if m != nil {
		return m.OverloadId
	}
	return ""
}

func (m *Decl_FunctionDecl_Overload) GetParams() []*Type {
	if m != nil {
		return m.Params
	}
	return nil
}

func (m *Decl_FunctionDecl_Overload) GetTypeParams() []string {
	if m != nil {
		return m.TypeParams
	}
	return nil
}

func (m *Decl_FunctionDecl_Overload) GetResultType() *Type {
	if m != nil {
		return m.ResultType
	}
	return nil
}

func (m *Decl_FunctionDecl_Overload) GetIsInstanceFunction() bool {
	if m != nil {
		return m.IsInstanceFunction
	}
	return false
}

func (m *Decl_FunctionDecl_Overload) GetDoc() string {
	if m != nil {
		return m.Doc
	}
	return ""
}

type Reference struct {
	Name       string                       `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	OverloadId []string                     `protobuf:"bytes,3,rep,name=overload_id,json=overloadId" json:"overload_id,omitempty"`
	Value      *google_api_expr_v1.Constant `protobuf:"bytes,4,opt,name=value" json:"value,omitempty"`
}

func (m *Reference) Reset()                    { *m = Reference{} }
func (m *Reference) String() string            { return proto.CompactTextString(m) }
func (*Reference) ProtoMessage()               {}
func (*Reference) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Reference) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Reference) GetOverloadId() []string {
	if m != nil {
		return m.OverloadId
	}
	return nil
}

func (m *Reference) GetValue() *google_api_expr_v1.Constant {
	if m != nil {
		return m.Value
	}
	return nil
}

func init() {
	proto.RegisterType((*CheckedExpr)(nil), "google.api.expr.checked.v1.CheckedExpr")
	proto.RegisterType((*Type)(nil), "google.api.expr.checked.v1.Type")
	proto.RegisterType((*Type_ListType)(nil), "google.api.expr.checked.v1.Type.ListType")
	proto.RegisterType((*Type_MapType)(nil), "google.api.expr.checked.v1.Type.MapType")
	proto.RegisterType((*Type_FunctionType)(nil), "google.api.expr.checked.v1.Type.FunctionType")
	proto.RegisterType((*Decl)(nil), "google.api.expr.checked.v1.Decl")
	proto.RegisterType((*Decl_IdentDecl)(nil), "google.api.expr.checked.v1.Decl.IdentDecl")
	proto.RegisterType((*Decl_FunctionDecl)(nil), "google.api.expr.checked.v1.Decl.FunctionDecl")
	proto.RegisterType((*Decl_FunctionDecl_Overload)(nil), "google.api.expr.checked.v1.Decl.FunctionDecl.Overload")
	proto.RegisterType((*Reference)(nil), "google.api.expr.checked.v1.Reference")
	proto.RegisterEnum("google.api.expr.checked.v1.Type_PrimitiveType", Type_PrimitiveType_name, Type_PrimitiveType_value)
	proto.RegisterEnum("google.api.expr.checked.v1.Type_WellKnownType", Type_WellKnownType_name, Type_WellKnownType_value)
}

func init() { proto.RegisterFile("proto/checked/v1/checked.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 1103 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x56, 0x6f, 0x4f, 0xe3, 0xc6,
	0x13, 0xc6, 0xb1, 0x93, 0xd8, 0x93, 0xf0, 0x93, 0x7f, 0xab, 0x6b, 0xe5, 0xfa, 0x4e, 0x80, 0xa8,
	0x2a, 0xd1, 0x53, 0x6b, 0x0e, 0x0e, 0xa1, 0x6b, 0x4f, 0xd5, 0x89, 0x80, 0xaf, 0xf8, 0x80, 0x24,
	0x32, 0x06, 0x84, 0x54, 0xd5, 0xf2, 0x39, 0x1b, 0x6a, 0xc5, 0xff, 0x64, 0x3b, 0x81, 0x7c, 0x82,
	0xbe, 0xaa, 0xd4, 0xaf, 0xd3, 0x0f, 0xd2, 0x6f, 0xd2, 0x17, 0xed, 0xbb, 0x6a, 0x77, 0xbd, 0x49,
	0xf8, 0x53, 0x12, 0xee, 0xdd, 0x78, 0x67, 0x9e, 0x67, 0x76, 0x66, 0x9f, 0xd9, 0x35, 0xac, 0xa4,
	0x59, 0x52, 0x24, 0x9b, 0xfe, 0x2f, 0xd8, 0x1f, 0xe0, 0xde, 0xe6, 0x68, 0x8b, 0x9b, 0x06, 0x75,
	0x20, 0xfd, 0x2a, 0x49, 0xae, 0x42, 0x6c, 0x78, 0x69, 0x60, 0xe0, 0x9b, 0x34, 0x33, 0xb8, 0x7b,
	0xb4, 0xa5, 0x7f, 0xc6, 0xb0, 0xa3, 0xad, 0xcd, 0x7c, 0x1c, 0x17, 0xde, 0x0d, 0x83, 0xe8, 0x5f,
	0x30, 0xc8, 0x26, 0xfd, 0xfa, 0x38, 0xec, 0x6f, 0x7a, 0xf1, 0xb8, 0x74, 0x3d, 0xbf, 0xeb, 0xc2,
	0x51, 0x5a, 0x70, 0xe7, 0x8b, 0xbb, 0xce, 0xbc, 0xc8, 0x86, 0x7e, 0xc1, 0xbc, 0xeb, 0xff, 0x88,
	0xd0, 0xd8, 0x67, 0xb9, 0xcd, 0x9b, 0x34, 0x43, 0x3f, 0xc3, 0x72, 0x86, 0xfb, 0x38, 0xc3, 0xb1,
	0x8f, 0xdd, 0xc8, 0x4b, 0xb5, 0xca, 0x9a, 0xb8, 0xd1, 0xd8, 0xfe, 0xce, 0xf8, 0xef, 0x0d, 0x1b,
	0x33, 0x78, 0xc3, 0xe6, 0xe0, 0x13, 0x2f, 0x35, 0xe3, 0x22, 0x1b, 0xdb, 0xcd, 0x6c, 0x66, 0x09,
	0x75, 0x40, 0x2e, 0xc6, 0x29, 0xa3, 0x16, 0x29, 0xf5, 0xce, 0xa2, 0xd4, 0xce, 0x38, 0x9d, 0xb2,
	0xd6, 0x0b, 0xf6, 0x85, 0xde, 0x41, 0x23, 0x4f, 0x86, 0x99, 0x8f, 0xdd, 0x20, 0xee, 0x27, 0x5a,
	0x75, 0x4d, 0xd8, 0x68, 0x6c, 0xaf, 0xdc, 0xe3, 0x1c, 0x6d, 0x19, 0xa7, 0x34, 0xcc, 0x8a, 0xfb,
	0x89, 0x0d, 0xf9, 0xc4, 0x46, 0xdf, 0x80, 0x44, 0x22, 0x34, 0x89, 0x22, 0xb5, 0x87, 0x90, 0x24,
	0xbd, 0x4d, 0xa3, 0xf4, 0x3e, 0xfc, 0xff, 0x5e, 0x89, 0x48, 0x05, 0x71, 0x80, 0xc7, 0x9a, 0xb0,
	0x26, 0x6c, 0x88, 0x36, 0x31, 0xd1, 0x5b, 0xa8, 0x8e, 0xbc, 0x70, 0x88, 0xb5, 0x0a, 0x65, 0xfd,
	0xea, 0xb1, 0x1a, 0x27, 0x7c, 0x36, 0xc3, 0x7c, 0x5f, 0x79, 0x23, 0xe8, 0x3f, 0x41, 0x73, 0xb6,
	0xde, 0x07, 0x52, 0xec, 0xde, 0x4e, 0xb1, 0xf6, 0x58, 0x0a, 0x42, 0x35, 0xc3, 0xfe, 0x41, 0x92,
	0x05, 0xb5, 0xb2, 0xfe, 0x27, 0x80, 0x44, 0x3c, 0xe8, 0x25, 0x88, 0xbd, 0x71, 0x4c, 0xc9, 0x1b,
	0xdb, 0x9f, 0x73, 0x22, 0x2e, 0x18, 0xc3, 0x24, 0x6a, 0x3a, 0x5c, 0xb2, 0x49, 0x10, 0x7a, 0x05,
	0x52, 0x3c, 0x0c, 0x43, 0x9a, 0xf5, 0x7f, 0xdb, 0xfa, 0xbd, 0xe0, 0xf6, 0x30, 0x0c, 0xcf, 0x49,
	0xa2, 0xc3, 0x25, 0x9b, 0x46, 0xa2, 0x36, 0x28, 0x69, 0x16, 0x44, 0x41, 0x11, 0x8c, 0xb0, 0x26,
	0x52, 0x98, 0x31, 0x6f, 0xb3, 0x46, 0x97, 0x23, 0xc8, 0xd7, 0xe1, 0x92, 0x3d, 0xa5, 0x40, 0x1f,
	0xa0, 0x7e, 0x9d, 0x79, 0x69, 0x8a, 0xd9, 0x99, 0x7d, 0x0a, 0x1b, 0x27, 0x40, 0x1d, 0x80, 0x6b,
	0x1c, 0x86, 0xee, 0x20, 0x4e, 0xae, 0x63, 0x2a, 0x9e, 0x45, 0xe8, 0x2e, 0x70, 0x18, 0x1e, 0x11,
	0x04, 0xdf, 0xdc, 0x35, 0x5f, 0x40, 0x87, 0xa0, 0x84, 0x41, 0x5e, 0xb8, 0x44, 0x9e, 0x5a, 0x8d,
	0x36, 0xf4, 0xeb, 0xb9, 0x7c, 0xc7, 0x41, 0x5e, 0x94, 0x54, 0x72, 0x58, 0xda, 0xc8, 0x04, 0x39,
	0xf2, 0x52, 0x46, 0x54, 0xa7, 0x44, 0x1b, 0x73, 0x89, 0x4e, 0xbc, 0x94, 0x57, 0x18, 0x31, 0x13,
	0x1d, 0x81, 0xdc, 0x1f, 0xc6, 0x7e, 0x11, 0x24, 0xb1, 0x26, 0x53, 0x9a, 0x6f, 0xe7, 0xd2, 0xbc,
	0x2f, 0x01, 0x7c, 0x4f, 0x9c, 0x00, 0x7d, 0x09, 0xcd, 0x08, 0xe7, 0xb9, 0x77, 0x85, 0xd9, 0xbe,
	0x94, 0x35, 0x61, 0x43, 0x39, 0x5c, 0xb2, 0x1b, 0xe5, 0x2a, 0xcd, 0xb8, 0x0a, 0x40, 0x47, 0x3c,
	0xf5, 0x32, 0x2f, 0xd2, 0xa0, 0x0c, 0x51, 0xc8, 0x5a, 0x97, 0x2c, 0xa1, 0x5d, 0x90, 0x28, 0xba,
	0xb1, 0x98, 0x70, 0x89, 0x90, 0x48, 0x3c, 0x32, 0xa0, 0x8a, 0xb3, 0x2c, 0xc9, 0xb4, 0xe6, 0x1c,
	0xa1, 0xb2, 0x30, 0xb4, 0x03, 0x0a, 0xbe, 0x29, 0x70, 0x9c, 0x93, 0xda, 0x97, 0x29, 0xe6, 0xd9,
	0x3d, 0xcc, 0x5e, 0x4c, 0x10, 0xd3, 0x40, 0xdd, 0x02, 0x99, 0x9f, 0x07, 0xfa, 0x01, 0x14, 0x1c,
	0xe2, 0x88, 0x15, 0x2b, 0x2c, 0x38, 0x67, 0x32, 0x81, 0x10, 0x4b, 0xff, 0x55, 0x80, 0x7a, 0x79,
	0x24, 0xe8, 0x2d, 0xc8, 0x03, 0x3c, 0x7e, 0x1a, 0x53, 0x7d, 0x80, 0xc7, 0x14, 0xfc, 0x0e, 0x80,
	0x0e, 0x2f, 0x83, 0x2f, 0x3a, 0xf0, 0x0a, 0xc5, 0xd0, 0x9d, 0xfc, 0x2e, 0x40, 0x73, 0xf6, 0x54,
	0xd1, 0x1e, 0x34, 0x32, 0x9c, 0x0f, 0xc3, 0xe2, 0x69, 0x3b, 0x02, 0x06, 0xe2, 0xcd, 0xf1, 0xb2,
	0x2b, 0x8a, 0xcf, 0xcb, 0x67, 0x62, 0x81, 0xe6, 0x78, 0xd9, 0x15, 0x31, 0xf2, 0xf5, 0x1c, 0x96,
	0x6f, 0x8d, 0x25, 0x5a, 0x01, 0xbd, 0x6b, 0x5b, 0x27, 0x96, 0x63, 0x9d, 0x9b, 0xae, 0x73, 0xd9,
	0x35, 0xdd, 0xb3, 0xf6, 0x69, 0xd7, 0xdc, 0xb7, 0xde, 0x5b, 0xe6, 0x81, 0xba, 0x84, 0x64, 0x90,
	0x5a, 0x9d, 0xce, 0xb1, 0x2a, 0x20, 0x05, 0xaa, 0x56, 0xdb, 0xd9, 0xdd, 0x51, 0x2b, 0x08, 0xa0,
	0x76, 0xc6, 0x6c, 0x91, 0xd8, 0x07, 0x9d, 0xb3, 0xd6, 0xb1, 0xa9, 0x4a, 0xc4, 0x3e, 0x75, 0x6c,
	0xab, 0xfd, 0xa3, 0x5a, 0x25, 0xe1, 0xad, 0x4b, 0xc7, 0x3c, 0x55, 0x6b, 0xeb, 0xe7, 0xb0, 0x7c,
	0x6b, 0x78, 0xd1, 0x2a, 0x3c, 0xbf, 0x30, 0x8f, 0x8f, 0xdd, 0xa3, 0x76, 0xe7, 0xa2, 0xfd, 0x50,
	0xd6, 0x3a, 0x88, 0x7b, 0xed, 0x4b, 0x55, 0x40, 0xcb, 0xa0, 0x38, 0xd6, 0x89, 0x79, 0xea, 0xec,
	0x9d, 0x74, 0xd5, 0x0a, 0x6a, 0x82, 0x7c, 0x70, 0x66, 0xef, 0x39, 0x56, 0xa7, 0xad, 0x8a, 0xad,
	0x06, 0x50, 0x7d, 0xbb, 0x83, 0x20, 0xee, 0xad, 0xff, 0x51, 0x05, 0xe9, 0x00, 0xfb, 0x21, 0x42,
	0x20, 0xc5, 0x5e, 0xc4, 0xba, 0xab, 0xd8, 0xd4, 0x46, 0x2d, 0xa8, 0x06, 0x3d, 0x1c, 0x17, 0xe5,
	0x29, 0xbe, 0x7c, 0xac, 0x63, 0x84, 0xc4, 0xb0, 0x48, 0x34, 0xb1, 0x88, 0xb0, 0x29, 0xf4, 0xd6,
	0x4c, 0x8b, 0xf3, 0x67, 0x9a, 0xd2, 0xf0, 0xd3, 0x2f, 0x99, 0x26, 0x04, 0x44, 0xa4, 0xca, 0x24,
	0x07, 0xda, 0x29, 0x67, 0x73, 0x51, 0x41, 0xb0, 0xc9, 0xdc, 0xbe, 0xfd, 0x16, 0xbd, 0x78, 0xe8,
	0x11, 0xdd, 0x4f, 0xe2, 0xbc, 0xf0, 0xe2, 0xa2, 0x7c, 0x87, 0xc8, 0x8b, 0xd6, 0x4b, 0x7c, 0xba,
	0x7f, 0xc5, 0x26, 0xa6, 0xfe, 0x57, 0x65, 0x2a, 0x52, 0xba, 0x19, 0x07, 0x94, 0x64, 0x84, 0xb3,
	0x30, 0xf1, 0x7a, 0xb9, 0x26, 0x50, 0x85, 0xed, 0x3e, 0xa9, 0x50, 0xa3, 0x53, 0xc2, 0xed, 0x29,
	0x91, 0xfe, 0x5b, 0x05, 0x64, 0xbe, 0x8e, 0x56, 0xa1, 0xc1, 0x3d, 0x6e, 0xd0, 0x2b, 0x4f, 0x0a,
	0xf8, 0x92, 0xd5, 0x43, 0x6f, 0xa0, 0x46, 0x2f, 0xb2, 0xc5, 0x25, 0x5e, 0xc6, 0x13, 0xea, 0xe9,
	0x3d, 0x98, 0xd3, 0xbf, 0x1d, 0xc5, 0x86, 0xc9, 0x35, 0x98, 0xdf, 0x9d, 0x41, 0xe9, 0x13, 0x66,
	0xf0, 0x15, 0x3c, 0x0b, 0x72, 0x37, 0xa0, 0x9d, 0xf5, 0xb1, 0x3b, 0x51, 0x05, 0x79, 0xc9, 0x64,
	0x1b, 0x05, 0xb9, 0x55, 0xba, 0x78, 0x57, 0x78, 0xdb, 0x6b, 0x93, 0xb6, 0x13, 0xed, 0xf6, 0xb0,
	0x1f, 0x32, 0xed, 0x16, 0xa0, 0x4c, 0xfe, 0x47, 0x1e, 0xd4, 0xef, 0x9d, 0x86, 0x95, 0x55, 0xcd,
	0x34, 0x6c, 0xa2, 0x05, 0x69, 0x61, 0x2d, 0xb4, 0x5e, 0xc3, 0x8a, 0x9f, 0x44, 0x8f, 0x54, 0xde,
	0x6a, 0x96, 0x7f, 0x82, 0x5d, 0x72, 0x6f, 0x77, 0x85, 0xbf, 0x05, 0xe1, 0x63, 0x8d, 0xde, 0xe1,
	0xaf, 0xff, 0x0d, 0x00, 0x00, 0xff, 0xff, 0xc0, 0x3f, 0x05, 0x46, 0x6c, 0x0b, 0x00, 0x00,
}
