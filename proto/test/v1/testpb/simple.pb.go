// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/test/v1/simple.proto

package testpb

import (
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	v1alpha1 "google.golang.org/genproto/googleapis/api/expr/v1alpha1"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SimpleTestFile struct {
	Name                 string               `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description          string               `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Section              []*SimpleTestSection `protobuf:"bytes,3,rep,name=section,proto3" json:"section,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *SimpleTestFile) Reset()         { *m = SimpleTestFile{} }
func (m *SimpleTestFile) String() string { return proto.CompactTextString(m) }
func (*SimpleTestFile) ProtoMessage()    {}
func (*SimpleTestFile) Descriptor() ([]byte, []int) {
	return fileDescriptor_26fa35b7026394de, []int{0}
}

func (m *SimpleTestFile) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SimpleTestFile.Unmarshal(m, b)
}
func (m *SimpleTestFile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SimpleTestFile.Marshal(b, m, deterministic)
}
func (m *SimpleTestFile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SimpleTestFile.Merge(m, src)
}
func (m *SimpleTestFile) XXX_Size() int {
	return xxx_messageInfo_SimpleTestFile.Size(m)
}
func (m *SimpleTestFile) XXX_DiscardUnknown() {
	xxx_messageInfo_SimpleTestFile.DiscardUnknown(m)
}

var xxx_messageInfo_SimpleTestFile proto.InternalMessageInfo

func (m *SimpleTestFile) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SimpleTestFile) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *SimpleTestFile) GetSection() []*SimpleTestSection {
	if m != nil {
		return m.Section
	}
	return nil
}

type SimpleTestSection struct {
	Name                 string        `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description          string        `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Test                 []*SimpleTest `protobuf:"bytes,3,rep,name=test,proto3" json:"test,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *SimpleTestSection) Reset()         { *m = SimpleTestSection{} }
func (m *SimpleTestSection) String() string { return proto.CompactTextString(m) }
func (*SimpleTestSection) ProtoMessage()    {}
func (*SimpleTestSection) Descriptor() ([]byte, []int) {
	return fileDescriptor_26fa35b7026394de, []int{1}
}

func (m *SimpleTestSection) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SimpleTestSection.Unmarshal(m, b)
}
func (m *SimpleTestSection) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SimpleTestSection.Marshal(b, m, deterministic)
}
func (m *SimpleTestSection) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SimpleTestSection.Merge(m, src)
}
func (m *SimpleTestSection) XXX_Size() int {
	return xxx_messageInfo_SimpleTestSection.Size(m)
}
func (m *SimpleTestSection) XXX_DiscardUnknown() {
	xxx_messageInfo_SimpleTestSection.DiscardUnknown(m)
}

var xxx_messageInfo_SimpleTestSection proto.InternalMessageInfo

func (m *SimpleTestSection) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SimpleTestSection) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *SimpleTestSection) GetTest() []*SimpleTest {
	if m != nil {
		return m.Test
	}
	return nil
}

type SimpleTest struct {
	Name          string                         `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                         `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Expr          string                         `protobuf:"bytes,3,opt,name=expr,proto3" json:"expr,omitempty"`
	DisableMacros bool                           `protobuf:"varint,4,opt,name=disable_macros,json=disableMacros,proto3" json:"disable_macros,omitempty"`
	DisableCheck  bool                           `protobuf:"varint,5,opt,name=disable_check,json=disableCheck,proto3" json:"disable_check,omitempty"`
	TypeEnv       []*v1alpha1.Decl               `protobuf:"bytes,6,rep,name=type_env,json=typeEnv,proto3" json:"type_env,omitempty"`
	Container     string                         `protobuf:"bytes,13,opt,name=container,proto3" json:"container,omitempty"`
	Bindings      map[string]*v1alpha1.ExprValue `protobuf:"bytes,7,rep,name=bindings,proto3" json:"bindings,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Types that are valid to be assigned to ResultMatcher:
	//	*SimpleTest_Value
	//	*SimpleTest_EvalError
	//	*SimpleTest_AnyEvalErrors
	//	*SimpleTest_Unknown
	//	*SimpleTest_AnyUnknowns
	ResultMatcher        isSimpleTest_ResultMatcher `protobuf_oneof:"result_matcher"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *SimpleTest) Reset()         { *m = SimpleTest{} }
func (m *SimpleTest) String() string { return proto.CompactTextString(m) }
func (*SimpleTest) ProtoMessage()    {}
func (*SimpleTest) Descriptor() ([]byte, []int) {
	return fileDescriptor_26fa35b7026394de, []int{2}
}

func (m *SimpleTest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SimpleTest.Unmarshal(m, b)
}
func (m *SimpleTest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SimpleTest.Marshal(b, m, deterministic)
}
func (m *SimpleTest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SimpleTest.Merge(m, src)
}
func (m *SimpleTest) XXX_Size() int {
	return xxx_messageInfo_SimpleTest.Size(m)
}
func (m *SimpleTest) XXX_DiscardUnknown() {
	xxx_messageInfo_SimpleTest.DiscardUnknown(m)
}

var xxx_messageInfo_SimpleTest proto.InternalMessageInfo

func (m *SimpleTest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SimpleTest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *SimpleTest) GetExpr() string {
	if m != nil {
		return m.Expr
	}
	return ""
}

func (m *SimpleTest) GetDisableMacros() bool {
	if m != nil {
		return m.DisableMacros
	}
	return false
}

func (m *SimpleTest) GetDisableCheck() bool {
	if m != nil {
		return m.DisableCheck
	}
	return false
}

func (m *SimpleTest) GetTypeEnv() []*v1alpha1.Decl {
	if m != nil {
		return m.TypeEnv
	}
	return nil
}

func (m *SimpleTest) GetContainer() string {
	if m != nil {
		return m.Container
	}
	return ""
}

func (m *SimpleTest) GetBindings() map[string]*v1alpha1.ExprValue {
	if m != nil {
		return m.Bindings
	}
	return nil
}

type isSimpleTest_ResultMatcher interface {
	isSimpleTest_ResultMatcher()
}

type SimpleTest_Value struct {
	Value *v1alpha1.Value `protobuf:"bytes,8,opt,name=value,proto3,oneof"`
}

type SimpleTest_EvalError struct {
	EvalError *v1alpha1.ErrorSet `protobuf:"bytes,9,opt,name=eval_error,json=evalError,proto3,oneof"`
}

type SimpleTest_AnyEvalErrors struct {
	AnyEvalErrors *ErrorSetMatcher `protobuf:"bytes,10,opt,name=any_eval_errors,json=anyEvalErrors,proto3,oneof"`
}

type SimpleTest_Unknown struct {
	Unknown *v1alpha1.UnknownSet `protobuf:"bytes,11,opt,name=unknown,proto3,oneof"`
}

type SimpleTest_AnyUnknowns struct {
	AnyUnknowns *UnknownSetMatcher `protobuf:"bytes,12,opt,name=any_unknowns,json=anyUnknowns,proto3,oneof"`
}

func (*SimpleTest_Value) isSimpleTest_ResultMatcher() {}

func (*SimpleTest_EvalError) isSimpleTest_ResultMatcher() {}

func (*SimpleTest_AnyEvalErrors) isSimpleTest_ResultMatcher() {}

func (*SimpleTest_Unknown) isSimpleTest_ResultMatcher() {}

func (*SimpleTest_AnyUnknowns) isSimpleTest_ResultMatcher() {}

func (m *SimpleTest) GetResultMatcher() isSimpleTest_ResultMatcher {
	if m != nil {
		return m.ResultMatcher
	}
	return nil
}

func (m *SimpleTest) GetValue() *v1alpha1.Value {
	if x, ok := m.GetResultMatcher().(*SimpleTest_Value); ok {
		return x.Value
	}
	return nil
}

func (m *SimpleTest) GetEvalError() *v1alpha1.ErrorSet {
	if x, ok := m.GetResultMatcher().(*SimpleTest_EvalError); ok {
		return x.EvalError
	}
	return nil
}

func (m *SimpleTest) GetAnyEvalErrors() *ErrorSetMatcher {
	if x, ok := m.GetResultMatcher().(*SimpleTest_AnyEvalErrors); ok {
		return x.AnyEvalErrors
	}
	return nil
}

func (m *SimpleTest) GetUnknown() *v1alpha1.UnknownSet {
	if x, ok := m.GetResultMatcher().(*SimpleTest_Unknown); ok {
		return x.Unknown
	}
	return nil
}

func (m *SimpleTest) GetAnyUnknowns() *UnknownSetMatcher {
	if x, ok := m.GetResultMatcher().(*SimpleTest_AnyUnknowns); ok {
		return x.AnyUnknowns
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*SimpleTest) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*SimpleTest_Value)(nil),
		(*SimpleTest_EvalError)(nil),
		(*SimpleTest_AnyEvalErrors)(nil),
		(*SimpleTest_Unknown)(nil),
		(*SimpleTest_AnyUnknowns)(nil),
	}
}

type ErrorSetMatcher struct {
	Errors               []*v1alpha1.ErrorSet `protobuf:"bytes,1,rep,name=errors,proto3" json:"errors,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ErrorSetMatcher) Reset()         { *m = ErrorSetMatcher{} }
func (m *ErrorSetMatcher) String() string { return proto.CompactTextString(m) }
func (*ErrorSetMatcher) ProtoMessage()    {}
func (*ErrorSetMatcher) Descriptor() ([]byte, []int) {
	return fileDescriptor_26fa35b7026394de, []int{3}
}

func (m *ErrorSetMatcher) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ErrorSetMatcher.Unmarshal(m, b)
}
func (m *ErrorSetMatcher) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ErrorSetMatcher.Marshal(b, m, deterministic)
}
func (m *ErrorSetMatcher) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ErrorSetMatcher.Merge(m, src)
}
func (m *ErrorSetMatcher) XXX_Size() int {
	return xxx_messageInfo_ErrorSetMatcher.Size(m)
}
func (m *ErrorSetMatcher) XXX_DiscardUnknown() {
	xxx_messageInfo_ErrorSetMatcher.DiscardUnknown(m)
}

var xxx_messageInfo_ErrorSetMatcher proto.InternalMessageInfo

func (m *ErrorSetMatcher) GetErrors() []*v1alpha1.ErrorSet {
	if m != nil {
		return m.Errors
	}
	return nil
}

type UnknownSetMatcher struct {
	Unknowns             []*v1alpha1.UnknownSet `protobuf:"bytes,1,rep,name=unknowns,proto3" json:"unknowns,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *UnknownSetMatcher) Reset()         { *m = UnknownSetMatcher{} }
func (m *UnknownSetMatcher) String() string { return proto.CompactTextString(m) }
func (*UnknownSetMatcher) ProtoMessage()    {}
func (*UnknownSetMatcher) Descriptor() ([]byte, []int) {
	return fileDescriptor_26fa35b7026394de, []int{4}
}

func (m *UnknownSetMatcher) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnknownSetMatcher.Unmarshal(m, b)
}
func (m *UnknownSetMatcher) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnknownSetMatcher.Marshal(b, m, deterministic)
}
func (m *UnknownSetMatcher) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnknownSetMatcher.Merge(m, src)
}
func (m *UnknownSetMatcher) XXX_Size() int {
	return xxx_messageInfo_UnknownSetMatcher.Size(m)
}
func (m *UnknownSetMatcher) XXX_DiscardUnknown() {
	xxx_messageInfo_UnknownSetMatcher.DiscardUnknown(m)
}

var xxx_messageInfo_UnknownSetMatcher proto.InternalMessageInfo

func (m *UnknownSetMatcher) GetUnknowns() []*v1alpha1.UnknownSet {
	if m != nil {
		return m.Unknowns
	}
	return nil
}

func init() {
	proto.RegisterType((*SimpleTestFile)(nil), "google.api.expr.test.v1.SimpleTestFile")
	proto.RegisterType((*SimpleTestSection)(nil), "google.api.expr.test.v1.SimpleTestSection")
	proto.RegisterType((*SimpleTest)(nil), "google.api.expr.test.v1.SimpleTest")
	proto.RegisterMapType((map[string]*v1alpha1.ExprValue)(nil), "google.api.expr.test.v1.SimpleTest.BindingsEntry")
	proto.RegisterType((*ErrorSetMatcher)(nil), "google.api.expr.test.v1.ErrorSetMatcher")
	proto.RegisterType((*UnknownSetMatcher)(nil), "google.api.expr.test.v1.UnknownSetMatcher")
}

func init() { proto.RegisterFile("proto/test/v1/simple.proto", fileDescriptor_26fa35b7026394de) }

var fileDescriptor_26fa35b7026394de = []byte{
	// 580 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x54, 0xcd, 0x6e, 0xda, 0x4c,
	0x14, 0x8d, 0x03, 0xe1, 0xe7, 0x12, 0xf2, 0x33, 0x9b, 0x6f, 0x84, 0x3e, 0xb5, 0xc8, 0xa4, 0x15,
	0xea, 0xc2, 0x16, 0xe9, 0x22, 0x4d, 0x56, 0x51, 0x12, 0xaa, 0x6c, 0x50, 0xa5, 0xa1, 0xe9, 0xd6,
	0x1d, 0xcc, 0x08, 0x2c, 0xcc, 0xd8, 0x9a, 0x31, 0x6e, 0xbc, 0xed, 0xba, 0x6f, 0xd1, 0x17, 0xad,
	0x66, 0x3c, 0xc6, 0x6d, 0x91, 0x2b, 0x94, 0xdd, 0xf8, 0xcc, 0x39, 0xe7, 0x9e, 0x7b, 0xef, 0x00,
	0xf4, 0x62, 0x11, 0x25, 0x91, 0x9b, 0x30, 0x99, 0xb8, 0xe9, 0xc8, 0x95, 0xc1, 0x3a, 0x0e, 0x99,
	0xa3, 0x41, 0xf4, 0xdf, 0x22, 0x8a, 0x16, 0x21, 0x73, 0x68, 0x1c, 0x38, 0xec, 0x39, 0x16, 0x8e,
	0x62, 0x39, 0xe9, 0xa8, 0xf7, 0x36, 0xbf, 0x70, 0x69, 0x1c, 0xb8, 0xea, 0xc2, 0x4d, 0x47, 0x34,
	0x8c, 0x97, 0x74, 0xe4, 0xfa, 0x4b, 0xe6, 0xaf, 0xd8, 0x3c, 0x37, 0xe8, 0x0d, 0x2a, 0x79, 0x2c,
	0xa5, 0xa1, 0x21, 0x5d, 0x54, 0x92, 0x52, 0x1a, 0x6e, 0x4c, 0x16, 0xfb, 0x87, 0x05, 0x27, 0x53,
	0x1d, 0xee, 0x33, 0x93, 0xc9, 0xc7, 0x20, 0x64, 0x08, 0x41, 0x9d, 0xd3, 0x35, 0xc3, 0x56, 0xdf,
	0x1a, 0xb6, 0x89, 0x3e, 0xa3, 0x3e, 0x74, 0xe6, 0x4c, 0xfa, 0x22, 0x88, 0x93, 0x20, 0xe2, 0xf8,
	0x50, 0x5f, 0xfd, 0x0e, 0xa1, 0x07, 0x68, 0x4a, 0xe6, 0xeb, 0xdb, 0x5a, 0xbf, 0x36, 0xec, 0x5c,
	0xbe, 0x73, 0x2a, 0xda, 0x74, 0xca, 0x7a, 0xd3, 0x5c, 0x41, 0x0a, 0xa9, 0xfd, 0xdd, 0x82, 0xf3,
	0x9d, 0xeb, 0x17, 0x26, 0xba, 0x82, 0xba, 0xaa, 0x68, 0xe2, 0x0c, 0xf6, 0x88, 0x43, 0xb4, 0xc0,
	0xfe, 0xd9, 0x00, 0x28, 0xc1, 0x17, 0x56, 0x47, 0x50, 0x57, 0x55, 0x70, 0x2d, 0x57, 0xa9, 0x33,
	0x7a, 0x03, 0x27, 0xf3, 0x40, 0xd2, 0x59, 0xc8, 0xbc, 0x35, 0xf5, 0x45, 0x24, 0x71, 0xbd, 0x6f,
	0x0d, 0x5b, 0xa4, 0x6b, 0xd0, 0x89, 0x06, 0xd1, 0x00, 0x0a, 0xc0, 0xd3, 0x7b, 0xc7, 0x47, 0x9a,
	0x75, 0x6c, 0xc0, 0x7b, 0x85, 0xa1, 0x6b, 0x68, 0x25, 0x59, 0xcc, 0x3c, 0xc6, 0x53, 0xdc, 0xd0,
	0x1d, 0xbe, 0xda, 0xe9, 0xb0, 0xd8, 0xb8, 0xf3, 0xc0, 0xfc, 0x90, 0x34, 0x15, 0x7f, 0xcc, 0x53,
	0xf4, 0x3f, 0xb4, 0xfd, 0x88, 0x27, 0x34, 0xe0, 0x4c, 0xe0, 0xae, 0xce, 0x57, 0x02, 0x68, 0x02,
	0xad, 0x59, 0xc0, 0xe7, 0x01, 0x5f, 0x48, 0xdc, 0xd4, 0xc6, 0xa3, 0x3d, 0x46, 0xe7, 0xdc, 0x19,
	0xcd, 0x98, 0x27, 0x22, 0x23, 0x5b, 0x0b, 0x74, 0x05, 0x47, 0xfa, 0xbd, 0xe1, 0x56, 0xdf, 0x1a,
	0x76, 0x2e, 0x5f, 0x57, 0x87, 0xfc, 0xa2, 0x68, 0x8f, 0x07, 0x24, 0xe7, 0xa3, 0x7b, 0x00, 0xf5,
	0x9a, 0x3d, 0x26, 0x44, 0x24, 0x70, 0x5b, 0xab, 0xed, 0x6a, 0xf5, 0x58, 0xd1, 0xa6, 0x2c, 0x79,
	0x3c, 0x20, 0x6d, 0xa5, 0xd3, 0xdf, 0x88, 0xc0, 0x29, 0xe5, 0x99, 0x57, 0x1a, 0x49, 0x0c, 0xda,
	0x69, 0x58, 0xd9, 0x53, 0x61, 0x34, 0xa1, 0x89, 0xbf, 0x64, 0xe2, 0xf1, 0x80, 0x74, 0x29, 0xcf,
	0xc6, 0x85, 0xa5, 0x44, 0xb7, 0xd0, 0xdc, 0xf0, 0x15, 0x8f, 0xbe, 0x71, 0xdc, 0xd1, 0x5e, 0x17,
	0xd5, 0xa9, 0x9e, 0x72, 0x62, 0x9e, 0xab, 0x90, 0xa1, 0x4f, 0x70, 0xac, 0x52, 0x99, 0x4f, 0x89,
	0x8f, 0xb5, 0x4d, 0xf5, 0x0f, 0xa6, 0x74, 0x29, 0x43, 0x75, 0x28, 0xcf, 0x0c, 0x2e, 0x7b, 0x5f,
	0xa1, 0xfb, 0xc7, 0xfc, 0xd1, 0x19, 0xd4, 0x56, 0x2c, 0x33, 0x4f, 0x56, 0x1d, 0xd1, 0x75, 0xb1,
	0x87, 0x43, 0x5d, 0x6c, 0xf0, 0x8f, 0x49, 0x3e, 0xc7, 0x42, 0xef, 0xc2, 0x6c, 0xe2, 0xe6, 0xf0,
	0x83, 0x75, 0x77, 0x06, 0x27, 0x82, 0xc9, 0x4d, 0x98, 0x78, 0xeb, 0x3c, 0x82, 0x3d, 0x81, 0xd3,
	0xbf, 0x46, 0x85, 0x6e, 0xa0, 0x61, 0x86, 0x6c, 0xe9, 0x87, 0xb3, 0xc7, 0xba, 0x88, 0x51, 0xd8,
	0x4f, 0x70, 0xbe, 0xd3, 0x26, 0xba, 0x85, 0xd6, 0x76, 0x48, 0xb9, 0xe5, 0x5e, 0xb3, 0x26, 0x5b,
	0xd5, 0xac, 0xa1, 0xff, 0xe6, 0xde, 0xff, 0x0a, 0x00, 0x00, 0xff, 0xff, 0x15, 0x2e, 0xd9, 0x79,
	0x90, 0x05, 0x00, 0x00,
}
