// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.26.0
// source: cel/expr/conformance/test_suite.proto

package conformance

import (
	expr "cel.dev/expr"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TestSuite struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Description string         `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
	Sections    []*TestSection `protobuf:"bytes,2,rep,name=sections,proto3" json:"sections,omitempty"`
}

func (x *TestSuite) Reset() {
	*x = TestSuite{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cel_expr_conformance_test_suite_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestSuite) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestSuite) ProtoMessage() {}

func (x *TestSuite) ProtoReflect() protoreflect.Message {
	mi := &file_cel_expr_conformance_test_suite_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestSuite.ProtoReflect.Descriptor instead.
func (*TestSuite) Descriptor() ([]byte, []int) {
	return file_cel_expr_conformance_test_suite_proto_rawDescGZIP(), []int{0}
}

func (x *TestSuite) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *TestSuite) GetSections() []*TestSection {
	if x != nil {
		return x.Sections
	}
	return nil
}

type TestSection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string      `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description string      `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Tests       []*TestCase `protobuf:"bytes,3,rep,name=tests,proto3" json:"tests,omitempty"`
}

func (x *TestSection) Reset() {
	*x = TestSection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cel_expr_conformance_test_suite_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestSection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestSection) ProtoMessage() {}

func (x *TestSection) ProtoReflect() protoreflect.Message {
	mi := &file_cel_expr_conformance_test_suite_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestSection.ProtoReflect.Descriptor instead.
func (*TestSection) Descriptor() ([]byte, []int) {
	return file_cel_expr_conformance_test_suite_proto_rawDescGZIP(), []int{1}
}

func (x *TestSection) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TestSection) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *TestSection) GetTests() []*TestCase {
	if x != nil {
		return x.Tests
	}
	return nil
}

type TestCase struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Input map[string]*InputValue `protobuf:"bytes,2,rep,name=input,proto3" json:"input,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Types that are assignable to Result:
	//
	//	*TestCase_Value
	//	*TestCase_Expr
	//	*TestCase_EvalError
	//	*TestCase_Unknown
	Result isTestCase_Result `protobuf_oneof:"result"`
}

func (x *TestCase) Reset() {
	*x = TestCase{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cel_expr_conformance_test_suite_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestCase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestCase) ProtoMessage() {}

func (x *TestCase) ProtoReflect() protoreflect.Message {
	mi := &file_cel_expr_conformance_test_suite_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestCase.ProtoReflect.Descriptor instead.
func (*TestCase) Descriptor() ([]byte, []int) {
	return file_cel_expr_conformance_test_suite_proto_rawDescGZIP(), []int{2}
}

func (x *TestCase) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TestCase) GetInput() map[string]*InputValue {
	if x != nil {
		return x.Input
	}
	return nil
}

func (m *TestCase) GetResult() isTestCase_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *TestCase) GetValue() *expr.Value {
	if x, ok := x.GetResult().(*TestCase_Value); ok {
		return x.Value
	}
	return nil
}

func (x *TestCase) GetExpr() string {
	if x, ok := x.GetResult().(*TestCase_Expr); ok {
		return x.Expr
	}
	return ""
}

func (x *TestCase) GetEvalError() *expr.ErrorSet {
	if x, ok := x.GetResult().(*TestCase_EvalError); ok {
		return x.EvalError
	}
	return nil
}

func (x *TestCase) GetUnknown() *expr.UnknownSet {
	if x, ok := x.GetResult().(*TestCase_Unknown); ok {
		return x.Unknown
	}
	return nil
}

type isTestCase_Result interface {
	isTestCase_Result()
}

type TestCase_Value struct {
	Value *expr.Value `protobuf:"bytes,3,opt,name=value,proto3,oneof"`
}

type TestCase_Expr struct {
	Expr string `protobuf:"bytes,4,opt,name=expr,proto3,oneof"`
}

type TestCase_EvalError struct {
	EvalError *expr.ErrorSet `protobuf:"bytes,5,opt,name=eval_error,json=evalError,proto3,oneof"`
}

type TestCase_Unknown struct {
	Unknown *expr.UnknownSet `protobuf:"bytes,6,opt,name=unknown,proto3,oneof"`
}

func (*TestCase_Value) isTestCase_Result() {}

func (*TestCase_Expr) isTestCase_Result() {}

func (*TestCase_EvalError) isTestCase_Result() {}

func (*TestCase_Unknown) isTestCase_Result() {}

type InputValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Value:
	//
	//	*InputValue_ExprValue
	//	*InputValue_ContextExpr
	Value isInputValue_Value `protobuf_oneof:"value"`
}

func (x *InputValue) Reset() {
	*x = InputValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cel_expr_conformance_test_suite_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InputValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InputValue) ProtoMessage() {}

func (x *InputValue) ProtoReflect() protoreflect.Message {
	mi := &file_cel_expr_conformance_test_suite_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InputValue.ProtoReflect.Descriptor instead.
func (*InputValue) Descriptor() ([]byte, []int) {
	return file_cel_expr_conformance_test_suite_proto_rawDescGZIP(), []int{3}
}

func (m *InputValue) GetValue() isInputValue_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *InputValue) GetExprValue() *expr.Value {
	if x, ok := x.GetValue().(*InputValue_ExprValue); ok {
		return x.ExprValue
	}
	return nil
}

func (x *InputValue) GetContextExpr() string {
	if x, ok := x.GetValue().(*InputValue_ContextExpr); ok {
		return x.ContextExpr
	}
	return ""
}

type isInputValue_Value interface {
	isInputValue_Value()
}

type InputValue_ExprValue struct {
	ExprValue *expr.Value `protobuf:"bytes,1,opt,name=expr_value,json=exprValue,proto3,oneof"`
}

type InputValue_ContextExpr struct {
	ContextExpr string `protobuf:"bytes,2,opt,name=context_expr,json=contextExpr,proto3,oneof"`
}

func (*InputValue_ExprValue) isInputValue_Value() {}

func (*InputValue_ContextExpr) isInputValue_Value() {}

var File_cel_expr_conformance_test_suite_proto protoreflect.FileDescriptor

var file_cel_expr_conformance_test_suite_proto_rawDesc = []byte{
	0x0a, 0x25, 0x63, 0x65, 0x6c, 0x2f, 0x65, 0x78, 0x70, 0x72, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x2f, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x73, 0x75, 0x69, 0x74,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x14, 0x63, 0x65, 0x6c, 0x2e, 0x65, 0x78, 0x70,
	0x72, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x1a, 0x13, 0x63,
	0x65, 0x6c, 0x2f, 0x65, 0x78, 0x70, 0x72, 0x2f, 0x65, 0x76, 0x61, 0x6c, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x14, 0x63, 0x65, 0x6c, 0x2f, 0x65, 0x78, 0x70, 0x72, 0x2f, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x6c, 0x0a, 0x09, 0x54, 0x65, 0x73, 0x74,
	0x53, 0x75, 0x69, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3d, 0x0a, 0x08, 0x73, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x65, 0x6c, 0x2e,
	0x65, 0x78, 0x70, 0x72, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65,
	0x2e, 0x54, 0x65, 0x73, 0x74, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x73, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x79, 0x0a, 0x0b, 0x54, 0x65, 0x73, 0x74, 0x53, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x05, 0x74,
	0x65, 0x73, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x65, 0x6c,
	0x2e, 0x65, 0x78, 0x70, 0x72, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63,
	0x65, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x43, 0x61, 0x73, 0x65, 0x52, 0x05, 0x74, 0x65, 0x73, 0x74,
	0x73, 0x22, 0xeb, 0x02, 0x0a, 0x08, 0x54, 0x65, 0x73, 0x74, 0x43, 0x61, 0x73, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x3f, 0x0a, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x29, 0x2e, 0x63, 0x65, 0x6c, 0x2e, 0x65, 0x78, 0x70, 0x72, 0x2e, 0x63, 0x6f, 0x6e,
	0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x43, 0x61, 0x73,
	0x65, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x69, 0x6e,
	0x70, 0x75, 0x74, 0x12, 0x27, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x65, 0x6c, 0x2e, 0x65, 0x78, 0x70, 0x72, 0x2e, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x48, 0x00, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x14, 0x0a, 0x04,
	0x65, 0x78, 0x70, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x65, 0x78,
	0x70, 0x72, 0x12, 0x33, 0x0a, 0x0a, 0x65, 0x76, 0x61, 0x6c, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x65, 0x6c, 0x2e, 0x65, 0x78, 0x70,
	0x72, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x53, 0x65, 0x74, 0x48, 0x00, 0x52, 0x09, 0x65, 0x76,
	0x61, 0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x30, 0x0a, 0x07, 0x75, 0x6e, 0x6b, 0x6e, 0x6f,
	0x77, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x65, 0x6c, 0x2e, 0x65,
	0x78, 0x70, 0x72, 0x2e, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x53, 0x65, 0x74, 0x48, 0x00,
	0x52, 0x07, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x1a, 0x5a, 0x0a, 0x0a, 0x49, 0x6e, 0x70,
	0x75, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x36, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x65, 0x6c, 0x2e, 0x65,
	0x78, 0x70, 0x72, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x2e,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22,
	0x6c, 0x0a, 0x0a, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x30, 0x0a,
	0x0a, 0x65, 0x78, 0x70, 0x72, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x65, 0x6c, 0x2e, 0x65, 0x78, 0x70, 0x72, 0x2e, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x48, 0x00, 0x52, 0x09, 0x65, 0x78, 0x70, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x23, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x65, 0x78, 0x70, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x45, 0x78, 0x70, 0x72, 0x42, 0x07, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x49, 0x0a,
	0x18, 0x63, 0x65, 0x6c, 0x2e, 0x64, 0x65, 0x76, 0x2e, 0x65, 0x78, 0x70, 0x72, 0x2e, 0x63, 0x6f,
	0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x42, 0x0e, 0x54, 0x65, 0x73, 0x74, 0x53,
	0x75, 0x69, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x18, 0x63, 0x65, 0x6c,
	0x2e, 0x64, 0x65, 0x76, 0x2f, 0x65, 0x78, 0x70, 0x72, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x6e, 0x63, 0x65, 0xf8, 0x01, 0x01, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cel_expr_conformance_test_suite_proto_rawDescOnce sync.Once
	file_cel_expr_conformance_test_suite_proto_rawDescData = file_cel_expr_conformance_test_suite_proto_rawDesc
)

func file_cel_expr_conformance_test_suite_proto_rawDescGZIP() []byte {
	file_cel_expr_conformance_test_suite_proto_rawDescOnce.Do(func() {
		file_cel_expr_conformance_test_suite_proto_rawDescData = protoimpl.X.CompressGZIP(file_cel_expr_conformance_test_suite_proto_rawDescData)
	})
	return file_cel_expr_conformance_test_suite_proto_rawDescData
}

var file_cel_expr_conformance_test_suite_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_cel_expr_conformance_test_suite_proto_goTypes = []any{
	(*TestSuite)(nil),       // 0: cel.expr.conformance.TestSuite
	(*TestSection)(nil),     // 1: cel.expr.conformance.TestSection
	(*TestCase)(nil),        // 2: cel.expr.conformance.TestCase
	(*InputValue)(nil),      // 3: cel.expr.conformance.InputValue
	nil,                     // 4: cel.expr.conformance.TestCase.InputEntry
	(*expr.Value)(nil),      // 5: cel.expr.Value
	(*expr.ErrorSet)(nil),   // 6: cel.expr.ErrorSet
	(*expr.UnknownSet)(nil), // 7: cel.expr.UnknownSet
}
var file_cel_expr_conformance_test_suite_proto_depIdxs = []int32{
	1, // 0: cel.expr.conformance.TestSuite.sections:type_name -> cel.expr.conformance.TestSection
	2, // 1: cel.expr.conformance.TestSection.tests:type_name -> cel.expr.conformance.TestCase
	4, // 2: cel.expr.conformance.TestCase.input:type_name -> cel.expr.conformance.TestCase.InputEntry
	5, // 3: cel.expr.conformance.TestCase.value:type_name -> cel.expr.Value
	6, // 4: cel.expr.conformance.TestCase.eval_error:type_name -> cel.expr.ErrorSet
	7, // 5: cel.expr.conformance.TestCase.unknown:type_name -> cel.expr.UnknownSet
	5, // 6: cel.expr.conformance.InputValue.expr_value:type_name -> cel.expr.Value
	3, // 7: cel.expr.conformance.TestCase.InputEntry.value:type_name -> cel.expr.conformance.InputValue
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_cel_expr_conformance_test_suite_proto_init() }
func file_cel_expr_conformance_test_suite_proto_init() {
	if File_cel_expr_conformance_test_suite_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_cel_expr_conformance_test_suite_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*TestSuite); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cel_expr_conformance_test_suite_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*TestSection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cel_expr_conformance_test_suite_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*TestCase); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cel_expr_conformance_test_suite_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*InputValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_cel_expr_conformance_test_suite_proto_msgTypes[2].OneofWrappers = []any{
		(*TestCase_Value)(nil),
		(*TestCase_Expr)(nil),
		(*TestCase_EvalError)(nil),
		(*TestCase_Unknown)(nil),
	}
	file_cel_expr_conformance_test_suite_proto_msgTypes[3].OneofWrappers = []any{
		(*InputValue_ExprValue)(nil),
		(*InputValue_ContextExpr)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cel_expr_conformance_test_suite_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_cel_expr_conformance_test_suite_proto_goTypes,
		DependencyIndexes: file_cel_expr_conformance_test_suite_proto_depIdxs,
		MessageInfos:      file_cel_expr_conformance_test_suite_proto_msgTypes,
	}.Build()
	File_cel_expr_conformance_test_suite_proto = out.File
	file_cel_expr_conformance_test_suite_proto_rawDesc = nil
	file_cel_expr_conformance_test_suite_proto_goTypes = nil
	file_cel_expr_conformance_test_suite_proto_depIdxs = nil
}
