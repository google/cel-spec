name: "proto3"
description: "Protocol buffer version 3 tests.  See notes for the available set of protos for tests."

section {
  name: "literal_singular"
  description: "Literals with singular fields set."

  test {
    name: "int64_nocontainer"
    expr: "google.api.expr.test.v1.proto3.TestAllTypes{single_int64: 17}"
    value {
      object_value {
        [type.googleapis.com/google.api.expr.test.v1.proto3.TestAllTypes]
        { single_int64: 17 }
      }
    }
  }

  test {
    name: "int32"
    container: "google.api.expr.test.v1.proto3"
    expr: "TestAllTypes{single_int32: -34}"
    value {
      object_value {
        [type.googleapis.com/google.api.expr.test.v1.proto3.TestAllTypes]
        { single_int32: -34 }
      }
    }
  }

  test {
    name: "int64"
    container: "google.api.expr.test.v1.proto3"
    expr: "TestAllTypes{single_int64: 17}"
    value {
      object_value {
        [type.googleapis.com/google.api.expr.test.v1.proto3.TestAllTypes]
        { single_int64: 17 }
      }
    }
  }

  test {
    name: "uint32"
    container: "google.api.expr.test.v1.proto3"
    expr: "TestAllTypes{single_uint32: 1u}"
    value {
      object_value: {
        [type.googleapis.com/google.api.expr.test.v1.proto3.TestAllTypes]
        { single_uint32: 1 }
      }
    }
  }

  test {
    name: "uint64"
    container: "google.api.expr.test.v1.proto3"
    expr: "TestAllTypes{single_uint64: 9999u}"
    value {
      object_value {
        [type.googleapis.com/google.api.expr.test.v1.proto3.TestAllTypes]
        { single_uint64: 9999 }
      }
    }
  }

  test {
    name: "sint32"
    container: "google.api.expr.test.v1.proto3"
    expr: "TestAllTypes{single_sint32: -3}"
    value {
      object_value {
        [type.googleapis.com/google.api.expr.test.v1.proto3.TestAllTypes]
        { single_sint32: -3 }
      }
    }
  }

  test {
    name: "sint64"
    container: "google.api.expr.test.v1.proto3"
    expr: "TestAllTypes{single_sint64: 255}"
    value {
      object_value {
        [type.googleapis.com/google.api.expr.test.v1.proto3.TestAllTypes]
        { single_sint64: 255 }
      }
    }
  }

  test {
    name: "fixed32"
    container: "google.api.expr.test.v1.proto3"
    expr: "TestAllTypes{single_fixed32: 43u}"
    value {
      object_value {
        [type.googleapis.com/google.api.expr.test.v1.proto3.TestAllTypes]
        { single_fixed32: 43 }
      }
    }
  }

  test {
    name: "fixed64"
    container: "google.api.expr.test.v1.proto3"
    expr: "TestAllTypes{single_fixed64: 1880u}"
    value {
      object_value {
        [type.googleapis.com/google.api.expr.test.v1.proto3.TestAllTypes]
        { single_fixed64: 1880 }
      }
    }
  }

  test {
    name: "sfixed32"
    container: "google.api.expr.test.v1.proto3"
    expr: "TestAllTypes{single_sfixed32: -404}"
    value {
      object_value {
        [type.googleapis.com/google.api.expr.test.v1.proto3.TestAllTypes]
        { single_sfixed32: -404 }
      }
    }
  }

  test {
    name: "sfixed64"
    container: "google.api.expr.test.v1.proto3"
    expr: "TestAllTypes{single_sfixed64: -1}"
    value {
      object_value {
        [type.googleapis.com/google.api.expr.test.v1.proto3.TestAllTypes]
        { single_sfixed64: -1 }
      }
    }
  }

  test {
    name: "float"
    container: "google.api.expr.test.v1.proto3"
    expr: "TestAllTypes{single_float: 3.1416}"
    value {
      object_value {
        [type.googleapis.com/google.api.expr.test.v1.proto3.TestAllTypes]
        { single_float: 3.1416 }
      }
    }
  }

  test {
    name: "double"
    container: "google.api.expr.test.v1.proto3"
    expr: "TestAllTypes{single_double: 6.022e23}"
    value {
      object_value {
        [type.googleapis.com/google.api.expr.test.v1.proto3.TestAllTypes]
        { single_double: 6.022e23 }
      }
    }
  }

  test {
    name: "bool"
    container: "google.api.expr.test.v1.proto3"
    expr: "TestAllTypes{single_bool: true}"
    value {
      object_value {
        [type.googleapis.com/google.api.expr.test.v1.proto3.TestAllTypes]
        { single_bool: true }
      }
    }
  }

  test {
    name: "string"
    container: "google.api.expr.test.v1.proto3"
    expr: "TestAllTypes{single_string: 'foo'}"
    value {
      object_value {
        [type.googleapis.com/google.api.expr.test.v1.proto3.TestAllTypes]
        { single_string: 'foo' }
      }
    }
  }

  test {
    name: "bytes"
    container: "google.api.expr.test.v1.proto3"
    expr: "TestAllTypes{single_bytes: b'\\377'}"
    value {
      object_value {
        [type.googleapis.com/google.api.expr.test.v1.proto3.TestAllTypes]
        { single_bytes: '\377' }
      }
    }
  }
}

section {
  name: "literal_wellknown"
  description: "Literals with well-known fields set."

  test {
    name: "any"
    container: "google.api.expr.test.v1.proto3"
    expr: "TestAllTypes{single_any: TestAllTypes{single_int32: 1}}"
    value {
      object_value {
        [type.googleapis.com/google.api.expr.test.v1.proto3.TestAllTypes] {
        single_any {
          [type.googleapis.com/google.api.expr.test.v1.proto3.TestAllTypes] {
            single_int32: 1
            }
          }
        }
      }
    }
  }

  test {
    name: "duration"
    container: "google.api.expr.test.v1.proto3"
    expr: "TestAllTypes{single_duration: duration('123s')}"
    value {
      object_value {
        [type.googleapis.com/google.api.expr.test.v1.proto3.TestAllTypes] {
          single_duration {
            seconds: 123
          }
        }
      }
    }
  }

  test {
    name: "timestamp"
    container: "google.api.expr.test.v1.proto3"
    expr: "TestAllTypes{single_timestamp: timestamp('2009-02-13T23:31:30Z')}"
    value {
      object_value {
        [type.googleapis.com/google.api.expr.test.v1.proto3.TestAllTypes] {
          single_timestamp {
            seconds: 1234567890
          }
        }
      }
    }
  }

  test {
    name: "struct"
    container: "google.api.expr.test.v1.proto3"
    expr: "TestAllTypes{single_struct: {'one': 1, 'two': 2}}"
    value {
      object_value {
        [type.googleapis.com/google.api.expr.test.v1.proto3.TestAllTypes] {
          single_struct {
            fields {
              key: "one"
              value { number_value: 1.0 }
            }
            fields {
              key: "two"
              value { number_value: 2.0 }
            }
          }
        }
      }
    }
  }

  test {
    name: "value"
    container: "google.api.expr.test.v1.proto3"
    expr: "TestAllTypes{single_value: 'foo'}"
    value {
      object_value {
        [type.googleapis.com/google.api.expr.test.v1.proto3.TestAllTypes] {
          single_value {
            string_value: "foo"
          }
        }
      }
    }
  }

  test {
    name: "int64_wrapper"
    container: "google.api.expr.test.v1.proto3"
    expr: "TestAllTypes{single_int64_wrapper: -321}"
    value {
      object_value {
        [type.googleapis.com/google.api.expr.test.v1.proto3.TestAllTypes] {
          single_int64_wrapper {
            value: -321
          }
        }
      }
    }
  }

  test {
    name: "int32_wrapper"
    container: "google.api.expr.test.v1.proto3"
    expr: "TestAllTypes{single_int32_wrapper: -456}"
    value {
      object_value {
        [type.googleapis.com/google.api.expr.test.v1.proto3.TestAllTypes] {
          single_int32_wrapper {
            value: -456
          }
        }
      }
    }
  }

  test {
    name: "double_wrapper"
    container: "google.api.expr.test.v1.proto3"
    expr: "TestAllTypes{single_double_wrapper: 2.71828}"
    value {
      object_value {
        [type.googleapis.com/google.api.expr.test.v1.proto3.TestAllTypes] {
          single_double_wrapper {
            value: 2.71828
          }
        }
      }
    }
  }

  test {
    name: "float_wrapper"
    container: "google.api.expr.test.v1.proto3"
    expr: "TestAllTypes{single_float_wrapper: 2.99792e8}"
    value {
      object_value {
        [type.googleapis.com/google.api.expr.test.v1.proto3.TestAllTypes] {
          single_float_wrapper {
            value: 2.99792e8
          }
        }
      }
    }
  }


  test {
    name: "uint64_wrapper"
    container: "google.api.expr.test.v1.proto3"
    expr: "TestAllTypes{single_uint64_wrapper: 8675309u}"
    value {
      object_value {
        [type.googleapis.com/google.api.expr.test.v1.proto3.TestAllTypes] {
          single_uint64_wrapper {
            value: 8675309
          }
        }
      }
    }
  }


  test {
    name: "uint32_wrapper"
    container: "google.api.expr.test.v1.proto3"
    expr: "TestAllTypes{single_uint32_wrapper: 987u}"
    value {
      object_value {
        [type.googleapis.com/google.api.expr.test.v1.proto3.TestAllTypes] {
          single_uint32_wrapper {
            value: 987
          }
        }
      }
    }
  }


  test {
    name: "string_wrapper"
    container: "google.api.expr.test.v1.proto3"
    expr: "TestAllTypes{single_string_wrapper: 'hubba'}"
    value {
      object_value {
        [type.googleapis.com/google.api.expr.test.v1.proto3.TestAllTypes] {
          single_string_wrapper {
            value: "hubba"
          }
        }
      }
    }
  }


  test {
    name: "bool_wrapper"
    container: "google.api.expr.test.v1.proto3"
    expr: "TestAllTypes{single_bool_wrapper: true}"
    value {
      object_value {
        [type.googleapis.com/google.api.expr.test.v1.proto3.TestAllTypes] {
          single_bool_wrapper {
            value: true
          }
        }
      }
    }
  }


  test {
    name: "bytes_wrapper"
    container: "google.api.expr.test.v1.proto3"
    expr: "TestAllTypes{single_bytes_wrapper: b'\\301\\103'}"
    value {
      object_value {
        [type.googleapis.com/google.api.expr.test.v1.proto3.TestAllTypes] {
          single_bytes_wrapper {
            value: "\301\103"
          }
        }
      }
    }
  }

}

section {
  name: "singular_bind"
  description: "Binding the singlular fields."

  test {
    name: "int32"
    expr: "x.single_int32"
    type_env: {
      name: "x"
      ident: { type: { message_type: "google.api.expr.test.v1.proto3.TestAllTypes" } }
    }
    bindings: {
      key: "x"
      value: { value: { object_value: {
            [type.googleapis.com/google.api.expr.test.v1.proto3.TestAllTypes]
            { single_int32: 17 }
          }}}
    }
    value: { int64_value: 17 }
  }

  test {
    name: "int64"
    expr: "x.single_int64"
    type_env: {
      name: "x"
      ident { type { message_type: "google.api.expr.test.v1.proto3.TestAllTypes" } }
    }
    bindings: {
      key: "x"
      value: { value: { object_value: {
            [type.googleapis.com/google.api.expr.test.v1.proto3.TestAllTypes]
            { single_int64: -99 }
          }}}
    }
    value: { int64_value: -99 }
  }
}

section {
  name: "empty_field"
  description: "Tests on empty fields."

  test {
    name: "scalar"
    container: "google.api.expr.test.v1.proto3"
    expr: "TestAllTypes{}.single_fixed32"
    value: { uint64_value: 0 }
  }

  test {
    name: "nested_message"
    container: "google.api.expr.test.v1.proto3"
    expr: "TestAllTypes{}.single_nested_message"
    value: { object_value: {
            [type.googleapis.com/google.api.expr.test.v1.proto3.TestAllTypes.NestedMessage]
            { }}}
  }

  test {
    name: "nested_message_subfield"
    container: "google.api.expr.test.v1.proto3"
    expr: "TestAllTypes{}.single_nested_message.bb"
    value: { int64_value: 0 }
  }

  test {
    name: "wkt"
    container: "google.api.expr.test.v1.proto3"
    expr: "TestAllTypes{}.single_int64_wrapper"
    value: { null_value: NULL_VALUE }
  }

  test {
    name: "repeated_scalar"
    container: "google.api.expr.test.v1.proto3"
    expr: "TestAllTypes{}.repeated_int64"
    value: { list_value: {} }
  }

  test {
    name: "repeated_nested"
    container: "google.api.expr.test.v1.proto3"
    expr: "TestAllTypes{}.repeated_nested_message"
    value: { list_value: {} }
  }

  test {
    name: "map"
    container: "google.api.expr.test.v1.proto3"
    expr: "TestAllTypes{}.map_string_string"
    value: { map_value: {} }
  }
}
section {
  name: "has"
  description: "Tests for the has() macro on proto3 messages."
  test {
    name: "undefined"
    container: "google.api.expr.test.v1.proto3"
    expr: "has(TestAllTypes{}.no_such_field)"
    disable_check: true
    eval_error: {
      errors: { message: "no_such_field" }
    }
  }
  test {
    name: "repeated_none_implicit"
    container: "google.api.expr.test.v1.proto3"
    expr: "has(TestAllTypes{}.repeated_int32)"
    value { bool_value: false }
  }
  test {
    name: "repeated_none_explicit"
    container: "google.api.expr.test.v1.proto3"
    expr: "has(TestAllTypes{repeated_int32: []}.repeated_int32)"
    value { bool_value: false }
  }
  test {
    name: "repeated_one"
    container: "google.api.expr.test.v1.proto3"
    expr: "has(TestAllTypes{repeated_int32: [1]}.repeated_int32)"
    value { bool_value: true }
  }
  test {
    name: "repeated_many"
    container: "google.api.expr.test.v1.proto3"
    expr: "has(TestAllTypes{repeated_int32: [1, 2, 3]}.repeated_int32)"
    value { bool_value: true }
  }
  test {
    name: "map_none_implicit"
    container: "google.api.expr.test.v1.proto3"
    expr: "has(TestAllTypes{}.map_string_string)"
    value { bool_value: false }
  }
  test {
    name: "map_none_explicit"
    container: "google.api.expr.test.v1.proto3"
    expr: "has(TestAllTypes{map_string_string: {}}.map_string_string)"
    value { bool_value: false }
  }
  test {
    name: "map_one_default"
    container: "google.api.expr.test.v1.proto3"
    expr: "has(TestAllTypes{map_string_string: {'MT': ''}}.map_string_string)"
    value { bool_value: true }
  }
  test {
    name: "map_one"
    container: "google.api.expr.test.v1.proto3"
    expr: "has(TestAllTypes{map_string_string: {'one': 'uno'}}.map_string_string)"
    value { bool_value: true }
  }
  test {
    name: "map_many"
    container: "google.api.expr.test.v1.proto3"
    expr: "has(TestAllTypes{map_string_string: {'one': 'uno', 'two': 'dos'}}.map_string_string)"
    value { bool_value: true }
  }
  test {
    name: "single_unset"
    container: "google.api.expr.test.v1.proto3"
    expr: "has(TestAllTypes{}.single_int32)"
    value { bool_value: false }
  }
  test {
    name: "single_set"
    container: "google.api.expr.test.v1.proto3"
    expr: "has(TestAllTypes{single_int32: 16}.single_int32)"
    value { bool_value: true }
  }
  test {
    name: "single_set_to_default"
    container: "google.api.expr.test.v1.proto3"
    expr: "has(TestAllTypes{single_int32: 0}.single_int32)"
    value { bool_value: false }
  }
  test {
    name: "single_message_unset"
    container: "google.api.expr.test.v1.proto3"
    expr: "has(TestAllTypes{}.standalone_message)"
    value { bool_value: false }
  }
  test {
    name: "single_message_set"
    container: "google.api.expr.test.v1.proto3"
    expr: "has(TestAllTypes{standalone_message: TestAllTypes.NestedMessage{bb: 123}}.standalone_message)"
    value { bool_value: true }
  }
  test {
    name: "single_message_set_to_default"
    container: "google.api.expr.test.v1.proto3"
    expr: "has(TestAllTypes{standalone_message: TestAllTypes.NestedMessage{}}.standalone_message)"
    value { bool_value: true }
  }
  test {
    name: "single_enum_unset"
    container: "google.api.expr.test.v1.proto3"
    expr: "has(TestAllTypes{}.standalone_enum)"
    value { bool_value: false }
  }
  test {
    name: "single_enum_set"
    container: "google.api.expr.test.v1.proto3"
    expr: "has(TestAllTypes{standalone_enum: TestAllTypes.NestedEnum.BAR}.standalone_enum)"
    value { bool_value: true }
  }
  test {
    name: "single_enum_set_zero"
    container: "google.api.expr.test.v1.proto3"
    expr: "has(TestAllTypes{standalone_enum: TestAllTypes.NestedEnum.FOO}.standalone_enum)"
    value { bool_value: false }
  }
  test {
    name: "oneof_unset"
    container: "google.api.expr.test.v1.proto3"
    expr: "has(TestAllTypes{}.single_nested_message)"
    value { bool_value: false }
  }
  test {
    name: "oneof_other_set"
    container: "google.api.expr.test.v1.proto3"
    expr: "has(TestAllTypes{single_nested_enum: TestAllTypes.NestedEnum.BAZ}.single_nested_message)"
    value { bool_value: false }
  }
  test {
    name: "oneof_set"
    container: "google.api.expr.test.v1.proto3"
    expr: "has(TestAllTypes{single_nested_message: TestAllTypes.NestedMessage{}}.single_nested_message)"
    value { bool_value: true }
  }
  test {
    name: "oneof_set_default"
    container: "google.api.expr.test.v1.proto3"
    expr: "has(TestAllTypes{single_nested_enum: TestAllTypes.NestedEnum.FOO}.single_nested_enum)"
    value { bool_value: true }
  }
}
