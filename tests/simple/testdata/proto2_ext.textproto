# proto-file: ../../../proto/cel/expr/conformance/test/simple.proto
# proto-message: cel.expr.conformance.test.SimpleTestFile

name: "proto2_ext"
description: "Tests for the proto extension library."
section: {
  name: "has_ext"
  test: {
    name: "package_scoped_int32"
    expr: "proto.hasExt(msg, cel.expr.conformance.proto2.int32_ext)"
    type_env: {
      name: "msg"
      ident: { type: { message_type: "cel.expr.conformance.proto2.TestAllTypes" } }
    }
    bindings: {
      key: "msg"
      value: {
        value: {
          object_value: {
            [type.googleapis.com/cel.expr.conformance.proto2.TestAllTypes]: {
              [cel.expr.conformance.proto2.int32_ext]: 42
            }
          }
        }
      }
    }
  }
  test: {
    name: "package_scoped_nested_ext"
    expr: "proto.hasExt(msg, cel.expr.conformance.proto2.nested_ext)"
    type_env: {
      name: "msg"
      ident: { type: { message_type: "cel.expr.conformance.proto2.TestAllTypes" } }
    }
    bindings: {
      key: "msg"
      value: {
        value: {
          object_value: {
            [type.googleapis.com/cel.expr.conformance.proto2.TestAllTypes]: {
              [cel.expr.conformance.proto2.nested_ext]: {}
            }
          }
        }
      }
    }
  }
  test: {
    name: "package_scoped_test_all_types_ext"
    expr: "proto.hasExt(msg, cel.expr.conformance.proto2.test_all_types_ext)"
    type_env: {
      name: "msg"
      ident: { type: { message_type: "cel.expr.conformance.proto2.TestAllTypes" } }
    }
    bindings: {
      key: "msg"
      value: {
        value: {
          object_value: {
            [type.googleapis.com/cel.expr.conformance.proto2.TestAllTypes]: {
              [cel.expr.conformance.proto2.test_all_types_ext]: {}
            }
          }
        }
      }
    }
  }
  test: {
    name: "package_scoped_test_all_types_nested_enum_ext"
    expr: "proto.hasExt(msg, cel.expr.conformance.proto2.nested_enum_ext)"
    type_env: {
      name: "msg"
      ident: { type: { message_type: "cel.expr.conformance.proto2.TestAllTypes" } }
    }
    bindings: {
      key: "msg"
      value: {
        value: {
          object_value: {
            [type.googleapis.com/cel.expr.conformance.proto2.TestAllTypes]: {
              [cel.expr.conformance.proto2.nested_enum_ext]: BAR
            }
          }
        }
      }
    }
  }
  test: {
    name: "package_scoped_repeated_test_all_types"
    expr: "proto.hasExt(msg, cel.expr.conformance.proto2.repeated_test_all_types)"
    type_env: {
      name: "msg"
      ident: { type: { message_type: "cel.expr.conformance.proto2.TestAllTypes" } }
    }
    bindings: {
      key: "msg"
      value: {
        value: {
          object_value: {
            [type.googleapis.com/cel.expr.conformance.proto2.TestAllTypes]: {
              [cel.expr.conformance.proto2.repeated_test_all_types]: [ { single_int64: 1 }, { single_bool: true } ]
            }
          }
        }
      }
    }
  }
  test: {
    name: "message_scoped_int64"
    expr: "proto.hasExt(msg, cel.expr.conformance.proto2.Proto2ExtensionScopedMessage.int64_ext)"
    type_env: {
      name: "msg"
      ident: { type: { message_type: "cel.expr.conformance.proto2.TestAllTypes" } }
    }
    bindings: {
      key: "msg"
      value: {
        value: {
          object_value: {
            [type.googleapis.com/cel.expr.conformance.proto2.TestAllTypes]: {
              [cel.expr.conformance.proto2.Proto2ExtensionScopedMessage.int64_ext]: 42
            }
          }
        }
      }
    }
  }
  test: {
    name: "message_scoped_nested_ext"
    expr: "proto.hasExt(msg, cel.expr.conformance.proto2.Proto2ExtensionScopedMessage.message_scoped_nested_ext)"
    type_env: {
      name: "msg"
      ident: { type: { message_type: "cel.expr.conformance.proto2.TestAllTypes" } }
    }
    bindings: {
      key: "msg"
      value: {
        value: {
          object_value: {
            [type.googleapis.com/cel.expr.conformance.proto2.TestAllTypes]: {
              [cel.expr.conformance.proto2.Proto2ExtensionScopedMessage.message_scoped_nested_ext]: {}
            }
          }
        }
      }
    }
  }
  test: {
    name: "message_scoped_nested_enum_ext"
    expr: "proto.hasExt(msg, cel.expr.conformance.proto2.Proto2ExtensionScopedMessage.nested_enum_ext)"
    type_env: {
      name: "msg"
      ident: { type: { message_type: "cel.expr.conformance.proto2.TestAllTypes" } }
    }
    bindings: {
      key: "msg"
      value: {
        value: {
          object_value: {
            [type.googleapis.com/cel.expr.conformance.proto2.TestAllTypes]: {
              [cel.expr.conformance.proto2.Proto2ExtensionScopedMessage.nested_enum_ext]: BAR
            }
          }
        }
      }
    }
  }
  test: {
    name: "message_scoped_repeated_test_all_types"
    expr: "proto.hasExt(msg, cel.expr.conformance.proto2.Proto2ExtensionScopedMessage.message_scoped_repeated_test_all_types)"
    type_env: {
      name: "msg"
      ident: { type: { message_type: "cel.expr.conformance.proto2.TestAllTypes" } }
    }
    bindings: {
      key: "msg"
      value: {
        value: {
          object_value: {
            [type.googleapis.com/cel.expr.conformance.proto2.TestAllTypes]: {
              [cel.expr.conformance.proto2.Proto2ExtensionScopedMessage.message_scoped_repeated_test_all_types]: [ { single_int64: 1 }, { single_bool: true } ]
            }
          }
        }
      }
    }
  }
}

section: {
  name: "get_ext"
  test: {
    name: "package_scoped_int32"
    expr: "proto.getExt(msg, cel.expr.conformance.proto2.int32_ext) == 42"
    type_env: {
      name: "msg"
      ident: { type: { message_type: "cel.expr.conformance.proto2.TestAllTypes" } }
    }
    bindings: {
      key: "msg"
      value: {
        value: {
          object_value: {
            [type.googleapis.com/cel.expr.conformance.proto2.TestAllTypes]: {
              [cel.expr.conformance.proto2.int32_ext]: 42
            }
          }
        }
      }
    }
  }
  test: {
    name: "package_scoped_nested_ext"
    expr: "proto.getExt(msg, cel.expr.conformance.proto2.nested_ext) == cel.expr.conformance.proto2.TestAllTypes{}"
    type_env: {
      name: "msg"
      ident: { type: { message_type: "cel.expr.conformance.proto2.TestAllTypes" } }
    }
    bindings: {
      key: "msg"
      value: {
        value: {
          object_value: {
            [type.googleapis.com/cel.expr.conformance.proto2.TestAllTypes]: {
              [cel.expr.conformance.proto2.nested_ext]: {}
            }
          }
        }
      }
    }
  }
  test: {
    name: "package_scoped_test_all_types_ext"
    expr: "proto.getExt(msg, cel.expr.conformance.proto2.test_all_types_ext) == cel.expr.conformance.proto2.TestAllTypes{}"
    type_env: {
      name: "msg"
      ident: { type: { message_type: "cel.expr.conformance.proto2.TestAllTypes" } }
    }
    bindings: {
      key: "msg"
      value: {
        value: {
          object_value: {
            [type.googleapis.com/cel.expr.conformance.proto2.TestAllTypes]: {
              [cel.expr.conformance.proto2.test_all_types_ext]: {}
            }
          }
        }
      }
    }
  }
  test: {
    name: "package_scoped_test_all_types_nested_enum_ext"
    expr: "proto.getExt(msg, cel.expr.conformance.proto2.nested_enum_ext) == cel.expr.conformance.proto2.TestAllTypes.NestedEnum.BAR"
    type_env: {
      name: "msg"
      ident: { type: { message_type: "cel.expr.conformance.proto2.TestAllTypes" } }
    }
    bindings: {
      key: "msg"
      value: {
        value: {
          object_value: {
            [type.googleapis.com/cel.expr.conformance.proto2.TestAllTypes]: {
              [cel.expr.conformance.proto2.nested_enum_ext]: BAR
            }
          }
        }
      }
    }
  }
  test: {
    name: "package_scoped_repeated_test_all_types"
    expr: "proto.getExt(msg, cel.expr.conformance.proto2.repeated_test_all_types) == [cel.expr.conformance.proto2.TestAllTypes{single_int64: 1}, cel.expr.conformance.proto2.TestAllTypes{single_bool: true}]"
    type_env: {
      name: "msg"
      ident: { type: { message_type: "cel.expr.conformance.proto2.TestAllTypes" } }
    }
    bindings: {
      key: "msg"
      value: {
        value: {
          object_value: {
            [type.googleapis.com/cel.expr.conformance.proto2.TestAllTypes]: {
              [cel.expr.conformance.proto2.repeated_test_all_types]: [ { single_int64: 1 }, { single_bool: true } ]
            }
          }
        }
      }
    }
  }
  test: {
    name: "message_scoped_int64"
    expr: "proto.getExt(msg, cel.expr.conformance.proto2.Proto2ExtensionScopedMessage.int64_ext) == 42"
    type_env: {
      name: "msg"
      ident: { type: { message_type: "cel.expr.conformance.proto2.TestAllTypes" } }
    }
    bindings: {
      key: "msg"
      value: {
        value: {
          object_value: {
            [type.googleapis.com/cel.expr.conformance.proto2.TestAllTypes]: {
              [cel.expr.conformance.proto2.Proto2ExtensionScopedMessage.int64_ext]: 42
            }
          }
        }
      }
    }
  }
  test: {
    name: "message_scoped_nested_ext"
    expr: "proto.getExt(msg, cel.expr.conformance.proto2.Proto2ExtensionScopedMessage.message_scoped_nested_ext) == cel.expr.conformance.proto2.TestAllTypes{}"
    type_env: {
      name: "msg"
      ident: { type: { message_type: "cel.expr.conformance.proto2.TestAllTypes" } }
    }
    bindings: {
      key: "msg"
      value: {
        value: {
          object_value: {
            [type.googleapis.com/cel.expr.conformance.proto2.TestAllTypes]: {
              [cel.expr.conformance.proto2.Proto2ExtensionScopedMessage.message_scoped_nested_ext]: {}
            }
          }
        }
      }
    }
  }
  test: {
    name: "message_scoped_nested_enum_ext"
    expr: "proto.getExt(msg, cel.expr.conformance.proto2.Proto2ExtensionScopedMessage.nested_enum_ext) == cel.expr.conformance.proto2.TestAllTypes.NestedEnum.BAR"
    type_env: {
      name: "msg"
      ident: { type: { message_type: "cel.expr.conformance.proto2.TestAllTypes" } }
    }
    bindings: {
      key: "msg"
      value: {
        value: {
          object_value: {
            [type.googleapis.com/cel.expr.conformance.proto2.TestAllTypes]: {
              [cel.expr.conformance.proto2.Proto2ExtensionScopedMessage.nested_enum_ext]: BAR
            }
          }
        }
      }
    }
  }
  test: {
    name: "message_scoped_repeated_test_all_types"
    expr: "proto.getExt(msg, cel.expr.conformance.proto2.Proto2ExtensionScopedMessage.message_scoped_repeated_test_all_types) == [cel.expr.conformance.proto2.TestAllTypes{single_int64: 1}, cel.expr.conformance.proto2.TestAllTypes{single_bool: true}]"
    type_env: {
      name: "msg"
      ident: { type: { message_type: "cel.expr.conformance.proto2.TestAllTypes" } }
    }
    bindings: {
      key: "msg"
      value: {
        value: {
          object_value: {
            [type.googleapis.com/cel.expr.conformance.proto2.TestAllTypes]: {
              [cel.expr.conformance.proto2.Proto2ExtensionScopedMessage.message_scoped_repeated_test_all_types]: [ { single_int64: 1 }, { single_bool: true } ]
            }
          }
        }
      }
    }
  }
}
