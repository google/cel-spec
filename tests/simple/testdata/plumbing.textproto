name: "plumbing"
description: "Check that the ConformanceService server can accept all arguments and return all responses."
section {
  name: "min"
  description: "Minimal programs."
  test {
    name: "min_program"
    description: "Smallest functionality: expr in, result out."
    expr: "17"
    value: { int64_value: 17 }
  }
}
section {
  name: "eval_results"
  description: "All evaluation result kinds."
  test {
    name: "error_result"
    description: "Check that error results go through."
    expr: "1 / 0"
    eval_error: {
      errors: { message: "foo" }
    }
  }
  test {
    name: "eval_map_results"
    description: "Check that map literals results are order independent."
    expr: '{"k1":"v1","k":"v"}'
    value: {
      map_value {
        entries {
          key: { string_value: "k" }
          value: { string_value: "v" }
        }
        entries {
          key: { string_value: "k1" }
          value: { string_value: "v1" }
        }
      }
    }
  }
}
section {
  name: "check_inputs"
  description: "All inputs to Check phase."
  test {
    name: "skip_check"
    description: "Make sure we can skip type checking."
    expr: "[17, 'pancakes']"
    disable_check: true
    value: {
      list_value {
        values: { int64_value: 17 }
        values: { string_value: "pancakes" }
      }
    }
  }
}
section {
  name: "eval_inputs"
  description: "All inputs to Eval phase."
  test {
    name: "one_ignored_value_arg"
    description: "Check that value bindings can be given, even if ignored."
    expr: "'foo'"
    bindings: {
      key: "x"
      value: { value: { int64_value: 17 } }
    }
    value: { string_value: "foo" }
  }
}
